{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport color from 'color';\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Text from \"./Text\";\nimport { withTheme } from \"../../core/theming\";\n\nvar StyledText = function StyledText(_ref) {\n  var theme = _ref.theme,\n      alpha = _ref.alpha,\n      family = _ref.family,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, [\"theme\", \"alpha\", \"family\", \"style\"]);\n\n  var textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  var font = theme.fonts[family];\n  var writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n  return React.createElement(Text, _extends({}, rest, {\n    style: [_objectSpread(_objectSpread({\n      color: textColor\n    }, font), {}, {\n      textAlign: 'left',\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\n\nexport default withTheme(StyledText);","map":{"version":3,"sources":["StyledText.tsx"],"names":["StyledText","style","rest","textColor","color","theme","font","writingDirection","I18nManager","textAlign","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;;AAGA,OAAA,IAAA;AACA,SAAA,SAAA;;AASA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAA,IAAA,EAAqD;AAAA,MAApD,KAAoD,GAAA,IAAA,CAApD,KAAoD;AAAA,MAApD,KAAoD,GAAA,IAAA,CAApD,KAAoD;AAAA,MAApD,MAAoD,GAAA,IAAA,CAApD,MAAoD;AAAA,MAA5BC,KAA4B,GAAA,IAAA,CAA5BA,KAA4B;AAAA,MAAlBC,IAAkB,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,QAAA,EAAA,OAAA,CAAA,CAAA;;AACtE,MAAMC,SAAS,GAAGC,KAAK,CAACC,KAAK,CAALA,MAAAA,CAAND,IAAK,CAALA,CAAAA,KAAAA,CAAAA,KAAAA,EAAAA,GAAAA,GAAlB,MAAkBA,EAAlB;AACA,MAAME,IAAI,GAAGD,KAAK,CAALA,KAAAA,CAAb,MAAaA,CAAb;AACA,MAAME,gBAAgB,GAAGC,WAAW,CAAXA,KAAAA,GAAAA,KAAAA,GAAzB,KAAA;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAAE,CAAA,aAAA,CAAA,aAAA,CAAA;AACHJ,MAAAA,KAAK,EAAED;AADJ,KAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA;AACwBM,MAAAA,SAAS,EADjC,MAAA;AAC2CF,MAAAA,gBAAAA,EAAAA;AAD3C,KAAA,CAAA,EAAA,KAAA;AAFT,GAAA,CAAA,CADF;AALF,CAAA;;AAgBA,eAAeG,SAAS,CAAxB,UAAwB,CAAxB","sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { I18nManager, StyleProp, TextStyle } from 'react-native';\n\nimport Text from './Text';\nimport { withTheme } from '../../core/theming';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme: ReactNativePaper.Theme;\n};\n\nconst StyledText = ({ theme, alpha, family, style, ...rest }: Props) => {\n  const textColor = color(theme.colors.text).alpha(alpha).rgb().string();\n  const font = theme.fonts[family];\n  const writingDirection = I18nManager.isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        { color: textColor, ...font, textAlign: 'left', writingDirection },\n        style,\n      ]}\n    />\n  );\n};\n\nexport default withTheme(StyledText);\n"]},"metadata":{},"sourceType":"module"}