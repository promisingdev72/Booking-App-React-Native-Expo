{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\header\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component, Fragment } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { shouldUpdate } from \"../../component-updater\";\nimport { weekDayNames } from \"../../dateutils\";\nimport { CHANGE_MONTH_LEFT_ARROW, CHANGE_MONTH_RIGHT_ARROW, HEADER_DAY_NAMES, HEADER_LOADING_INDICATOR, HEADER_MONTH_NAME } from \"../../testIDs\";\nimport styleConstructor from \"./style\";\n\nvar CalendarHeader = function (_Component) {\n  _inherits(CalendarHeader, _Component);\n\n  var _super = _createSuper(CalendarHeader);\n\n  function CalendarHeader(props) {\n    var _this;\n\n    _classCallCheck(this, CalendarHeader);\n\n    _this = _super.call(this, props);\n\n    _this.addMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth(1);\n    };\n\n    _this.subtractMonth = function () {\n      var addMonth = _this.props.addMonth;\n      addMonth(-1);\n    };\n\n    _this.onPressLeft = function () {\n      var _this$props = _this.props,\n          onPressArrowLeft = _this$props.onPressArrowLeft,\n          month = _this$props.month;\n\n      if (typeof onPressArrowLeft === 'function') {\n        return onPressArrowLeft(_this.subtractMonth, month);\n      }\n\n      return _this.subtractMonth();\n    };\n\n    _this.onPressRight = function () {\n      var _this$props2 = _this.props,\n          onPressArrowRight = _this$props2.onPressArrowRight,\n          month = _this$props2.month;\n\n      if (typeof onPressArrowRight === 'function') {\n        return onPressArrowRight(_this.addMonth, month);\n      }\n\n      return _this.addMonth();\n    };\n\n    _this.renderWeekDays = function (weekDaysNames) {\n      var disabledDaysIndexes = _this.props.disabledDaysIndexes;\n      return weekDaysNames.map(function (day, idx) {\n        var dayStyle = [_this.style.dayHeader];\n\n        if (_.includes(disabledDaysIndexes, idx)) {\n          dayStyle.push(_this.style.disabledDayHeader);\n        }\n\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: idx,\n          style: dayStyle,\n          numberOfLines: 1,\n          accessibilityLabel: '',\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 9\n          }\n        }, day);\n      });\n    };\n\n    _this.renderHeader = function () {\n      var _this$props3 = _this.props,\n          renderHeader = _this$props3.renderHeader,\n          month = _this$props3.month,\n          monthFormat = _this$props3.monthFormat,\n          testID = _this$props3.testID,\n          webAriaLevel = _this$props3.webAriaLevel;\n      var webProps = Platform.OS === 'web' ? {\n        'aria-level': webAriaLevel\n      } : {};\n\n      if (renderHeader) {\n        return renderHeader(month);\n      }\n\n      return React.createElement(Fragment, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, _extends({\n        allowFontScaling: false,\n        style: _this.style.monthText,\n        testID: testID ? HEADER_MONTH_NAME + \"-\" + testID : HEADER_MONTH_NAME\n      }, webProps, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }), month.toString(monthFormat)));\n    };\n\n    _this.onAccessibilityAction = function (event) {\n      switch (event.nativeEvent.actionName) {\n        case 'decrement':\n          _this.onPressLeft();\n\n          break;\n\n        case 'increment':\n          _this.onPressRight();\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(CalendarHeader, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\n        return true;\n      }\n\n      return shouldUpdate(this.props, nextProps, ['displayLoadingIndicator', 'hideDayNames', 'firstDay', 'showWeekNumbers', 'monthFormat', 'renderArrow', 'disableArrowLeft', 'disableArrowRight']);\n    }\n  }, {\n    key: \"renderArrow\",\n    value: function renderArrow(direction) {\n      var _this$props4 = this.props,\n          hideArrows = _this$props4.hideArrows,\n          disableArrowLeft = _this$props4.disableArrowLeft,\n          disableArrowRight = _this$props4.disableArrowRight,\n          renderArrow = _this$props4.renderArrow,\n          testID = _this$props4.testID;\n\n      if (hideArrows) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 14\n          }\n        });\n      }\n\n      var isLeft = direction === 'left';\n      var id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n      var testId = testID ? id + \"-\" + testID : id;\n      var onPress = isLeft ? this.onPressLeft : this.onPressRight;\n      var imageSource = isLeft ? require(\"../img/previous.png\") : require(\"../img/next.png\");\n      var renderArrowDirection = isLeft ? 'left' : 'right';\n      var shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n      return React.createElement(TouchableOpacity, {\n        onPress: !shouldDisable ? onPress : undefined,\n        disabled: shouldDisable,\n        style: this.style.arrow,\n        hitSlop: {\n          left: 20,\n          right: 20,\n          top: 20,\n          bottom: 20\n        },\n        testID: testId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, renderArrow ? renderArrow(renderArrowDirection) : React.createElement(Image, {\n        source: imageSource,\n        style: shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"renderIndicator\",\n    value: function renderIndicator() {\n      var _this$props5 = this.props,\n          displayLoadingIndicator = _this$props5.displayLoadingIndicator,\n          theme = _this$props5.theme,\n          testID = _this$props5.testID;\n\n      if (displayLoadingIndicator) {\n        return React.createElement(ActivityIndicator, {\n          color: theme && theme.indicatorColor,\n          testID: testID ? HEADER_LOADING_INDICATOR + \"-\" + testID : HEADER_LOADING_INDICATOR,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"renderDayNames\",\n    value: function renderDayNames() {\n      var _this$props6 = this.props,\n          firstDay = _this$props6.firstDay,\n          hideDayNames = _this$props6.hideDayNames,\n          showWeekNumbers = _this$props6.showWeekNumbers,\n          testID = _this$props6.testID;\n      var weekDaysNames = weekDayNames(firstDay);\n\n      if (!hideDayNames) {\n        return React.createElement(View, {\n          style: this.style.week,\n          testID: testID ? HEADER_DAY_NAMES + \"-\" + testID : HEADER_DAY_NAMES,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 9\n          }\n        }, showWeekNumbers && React.createElement(Text, {\n          allowFontScaling: false,\n          style: this.style.dayHeader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 31\n          }\n        }), this.renderWeekDays(weekDaysNames));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props7 = this.props,\n          style = _this$props7.style,\n          testID = _this$props7.testID;\n      return React.createElement(View, {\n        testID: testID,\n        style: style,\n        accessible: true,\n        accessibilityRole: 'adjustable',\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'increment'\n        }, {\n          name: 'decrement',\n          label: 'decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction,\n        accessibilityElementsHidden: this.props.accessibilityElementsHidden,\n        importantForAccessibility: this.props.importantForAccessibility,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this.style.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 9\n        }\n      }, this.renderArrow('left'), React.createElement(View, {\n        style: this.style.headerContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }\n      }, this.renderHeader(), this.renderIndicator()), this.renderArrow('right')), this.renderDayNames());\n    }\n  }]);\n\n  return CalendarHeader;\n}(Component);\n\nCalendarHeader.displayName = 'IGNORE';\nCalendarHeader.propTypes = {\n  theme: PropTypes.object,\n  firstDay: PropTypes.number,\n  displayLoadingIndicator: PropTypes.bool,\n  showWeekNumbers: PropTypes.bool,\n  month: PropTypes.instanceOf(XDate),\n  addMonth: PropTypes.func,\n  monthFormat: PropTypes.string,\n  hideDayNames: PropTypes.bool,\n  hideArrows: PropTypes.bool,\n  renderArrow: PropTypes.func,\n  onPressArrowLeft: PropTypes.func,\n  onPressArrowRight: PropTypes.func,\n  disableArrowLeft: PropTypes.bool,\n  disableArrowRight: PropTypes.bool,\n  disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n  renderHeader: PropTypes.any,\n  webAriaLevel: PropTypes.number\n};\nCalendarHeader.defaultProps = {\n  monthFormat: 'MMMM yyyy',\n  webAriaLevel: 1\n};\nexport default CalendarHeader;","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/calendar/header/index.js"],"names":["_","PropTypes","XDate","React","Component","Fragment","shouldUpdate","weekDayNames","CHANGE_MONTH_LEFT_ARROW","CHANGE_MONTH_RIGHT_ARROW","HEADER_DAY_NAMES","HEADER_LOADING_INDICATOR","HEADER_MONTH_NAME","styleConstructor","CalendarHeader","props","addMonth","subtractMonth","onPressLeft","onPressArrowLeft","month","onPressRight","onPressArrowRight","renderWeekDays","weekDaysNames","disabledDaysIndexes","map","day","idx","dayStyle","style","dayHeader","includes","push","disabledDayHeader","renderHeader","monthFormat","testID","webAriaLevel","webProps","Platform","OS","monthText","toString","onAccessibilityAction","event","nativeEvent","actionName","theme","nextProps","direction","hideArrows","disableArrowLeft","disableArrowRight","renderArrow","isLeft","id","testId","onPress","imageSource","require","renderArrowDirection","shouldDisable","undefined","arrow","left","right","top","bottom","disabledArrowImage","arrowImage","displayLoadingIndicator","indicatorColor","firstDay","hideDayNames","showWeekNumbers","week","name","label","accessibilityElementsHidden","importantForAccessibility","header","headerContainer","renderIndicator","renderDayNames","displayName","propTypes","object","number","bool","instanceOf","func","string","arrayOf","any","defaultProps"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component, Fragment} from 'react';\nimport {ActivityIndicator, Platform, View, Text, TouchableOpacity, Image} from 'react-native';\nimport {shouldUpdate} from '../../component-updater';\nimport {weekDayNames} from '../../dateutils';\nimport {\n  CHANGE_MONTH_LEFT_ARROW,\n  CHANGE_MONTH_RIGHT_ARROW,\n  HEADER_DAY_NAMES,\n  HEADER_LOADING_INDICATOR,\n  HEADER_MONTH_NAME\n} from '../../testIDs';\nimport styleConstructor from './style';\n\nclass CalendarHeader extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    theme: PropTypes.object,\n    firstDay: PropTypes.number,\n    displayLoadingIndicator: PropTypes.bool,\n    showWeekNumbers: PropTypes.bool,\n    month: PropTypes.instanceOf(XDate),\n    addMonth: PropTypes.func,\n    /** Month format in the title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    monthFormat: PropTypes.string,\n    /**  Hide day names. Default = false */\n    hideDayNames: PropTypes.bool,\n    /** Hide month navigation arrows. Default = false */\n    hideArrows: PropTypes.bool,\n    /** Replace default arrows with custom ones (direction can be 'left' or 'right') */\n    renderArrow: PropTypes.func,\n    /** Handler which gets executed when press arrow icon left. It receive a callback can go back month */\n    onPressArrowLeft: PropTypes.func,\n    /** Handler which gets executed when press arrow icon right. It receive a callback can go next month */\n    onPressArrowRight: PropTypes.func,\n    /** Disable left arrow. Default = false */\n    disableArrowLeft: PropTypes.bool,\n    /** Disable right arrow. Default = false */\n    disableArrowRight: PropTypes.bool,\n    /** Apply custom disable color to selected day indexes */\n    disabledDaysIndexes: PropTypes.arrayOf(PropTypes.number),\n    /** Replace default month and year title with custom one. the function receive a date as parameter. */\n    renderHeader: PropTypes.any,\n    /** Provide aria-level for calendar heading for proper accessibility when used with web (react-native-web) */\n    webAriaLevel: PropTypes.number\n  };\n\n  static defaultProps = {\n    monthFormat: 'MMMM yyyy',\n    webAriaLevel: 1\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.month.toString('yyyy MM') !== this.props.month.toString('yyyy MM')) {\n      return true;\n    }\n    return shouldUpdate(this.props, nextProps, [\n      'displayLoadingIndicator',\n      'hideDayNames',\n      'firstDay',\n      'showWeekNumbers',\n      'monthFormat',\n      'renderArrow',\n      'disableArrowLeft',\n      'disableArrowRight'\n    ]);\n  }\n\n  addMonth = () => {\n    const {addMonth} = this.props;\n    addMonth(1);\n  };\n\n  subtractMonth = () => {\n    const {addMonth} = this.props;\n    addMonth(-1);\n  };\n\n  onPressLeft = () => {\n    const {onPressArrowLeft, month} = this.props;\n\n    if (typeof onPressArrowLeft === 'function') {\n      return onPressArrowLeft(this.subtractMonth, month);\n    }\n    return this.subtractMonth();\n  };\n\n  onPressRight = () => {\n    const {onPressArrowRight, month} = this.props;\n\n    if (typeof onPressArrowRight === 'function') {\n      return onPressArrowRight(this.addMonth, month);\n    }\n    return this.addMonth();\n  };\n\n  renderWeekDays = weekDaysNames => {\n    const {disabledDaysIndexes} = this.props;\n\n    return weekDaysNames.map((day, idx) => {\n      const dayStyle = [this.style.dayHeader];\n\n      if (_.includes(disabledDaysIndexes, idx)) {\n        dayStyle.push(this.style.disabledDayHeader);\n      }\n\n      return (\n        <Text allowFontScaling={false} key={idx} style={dayStyle} numberOfLines={1} accessibilityLabel={''}>\n          {day}\n        </Text>\n      );\n    });\n  };\n\n  renderHeader = () => {\n    const {renderHeader, month, monthFormat, testID, webAriaLevel} = this.props;\n    const webProps = Platform.OS === 'web' ? {'aria-level': webAriaLevel} : {};\n\n    if (renderHeader) {\n      return renderHeader(month);\n    }\n\n    return (\n      <Fragment>\n        <Text\n          allowFontScaling={false}\n          style={this.style.monthText}\n          testID={testID ? `${HEADER_MONTH_NAME}-${testID}` : HEADER_MONTH_NAME}\n          {...webProps}\n        >\n          {month.toString(monthFormat)}\n        </Text>\n      </Fragment>\n    );\n  };\n\n  renderArrow(direction) {\n    const {hideArrows, disableArrowLeft, disableArrowRight, renderArrow, testID} = this.props;\n    if (hideArrows) {\n      return <View />;\n    }\n    const isLeft = direction === 'left';\n    const id = isLeft ? CHANGE_MONTH_LEFT_ARROW : CHANGE_MONTH_RIGHT_ARROW;\n    const testId = testID ? `${id}-${testID}` : id;\n    const onPress = isLeft ? this.onPressLeft : this.onPressRight;\n    const imageSource = isLeft ? require('../img/previous.png') : require('../img/next.png');\n    const renderArrowDirection = isLeft ? 'left' : 'right';\n    const shouldDisable = isLeft ? disableArrowLeft : disableArrowRight;\n\n    return (\n      <TouchableOpacity\n        onPress={!shouldDisable ? onPress : undefined}\n        disabled={shouldDisable}\n        style={this.style.arrow}\n        hitSlop={{left: 20, right: 20, top: 20, bottom: 20}}\n        testID={testId}\n      >\n        {renderArrow ? (\n          renderArrow(renderArrowDirection)\n        ) : (\n          <Image source={imageSource} style={shouldDisable ? this.style.disabledArrowImage : this.style.arrowImage} />\n        )}\n      </TouchableOpacity>\n    );\n  }\n\n  renderIndicator() {\n    const {displayLoadingIndicator, theme, testID} = this.props;\n\n    if (displayLoadingIndicator) {\n      return (\n        <ActivityIndicator\n          color={theme && theme.indicatorColor}\n          testID={testID ? `${HEADER_LOADING_INDICATOR}-${testID}` : HEADER_LOADING_INDICATOR}\n        />\n      );\n    }\n  }\n\n  renderDayNames() {\n    const {firstDay, hideDayNames, showWeekNumbers, testID} = this.props;\n    const weekDaysNames = weekDayNames(firstDay);\n\n    if (!hideDayNames) {\n      return (\n        <View style={this.style.week} testID={testID ? `${HEADER_DAY_NAMES}-${testID}` : HEADER_DAY_NAMES}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.dayHeader}></Text>}\n          {this.renderWeekDays(weekDaysNames)}\n        </View>\n      );\n    }\n  }\n\n  render() {\n    const {style, testID} = this.props;\n\n    return (\n      <View\n        testID={testID}\n        style={style}\n        accessible\n        accessibilityRole={'adjustable'}\n        accessibilityActions={[\n          {name: 'increment', label: 'increment'},\n          {name: 'decrement', label: 'decrement'}\n        ]}\n        onAccessibilityAction={this.onAccessibilityAction}\n        accessibilityElementsHidden={this.props.accessibilityElementsHidden} // iOS\n        importantForAccessibility={this.props.importantForAccessibility} // Android\n      >\n        <View style={this.style.header}>\n          {this.renderArrow('left')}\n          <View style={this.style.headerContainer}>\n            {this.renderHeader()}\n            {this.renderIndicator()}\n          </View>\n          {this.renderArrow('right')}\n        </View>\n        {this.renderDayNames()}\n      </View>\n    );\n  }\n\n  onAccessibilityAction = event => {\n    switch (event.nativeEvent.actionName) {\n      case 'decrement':\n        this.onPressLeft();\n        break;\n      case 'increment':\n        this.onPressRight();\n        break;\n      default:\n        break;\n    }\n  };\n}\n\nexport default CalendarHeader;\n"]},"metadata":{},"sourceType":"module"}