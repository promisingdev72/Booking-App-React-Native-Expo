{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport * as Font from \"expo-font\";\nLogBox.ignoreAllLogs(true);\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nvar Stack = createStackNavigator();\nimport Splash from \"./source/screens/Welcome\";\nimport Login from \"./source/screens/Login\";\nimport Register from \"./source/screens/Register\";\nimport ForgotPassword from \"./source/screens/ForgotPassword\";\nimport Tabbar from \"./source/screens/Tabbar\";\nimport BookedAppointment from \"./source/screens/BookedAppointment\";\nimport PayPalWebview from \"./source/screens/NewAppointment/PayPalWebview\";\nimport Webview from \"./source/screens/Register/Webview\";\nimport ChangePassword from \"./source/screens/ChangePassword.js\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loaded: false\n    };\n\n    _this._loadFontsAsync = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Poppins_Light: require(\"./assets/fonts/Poppins-Light.ttf\"),\n                Poppins_Medium: require(\"./assets/fonts/Poppins-Medium.ttf\"),\n                Poppins_Regular: require(\"./assets/fonts/Poppins-Regular.ttf\"),\n                Poppins_SemiBold: require(\"./assets/fonts/Poppins-SemiBold.ttf\")\n              }));\n\n            case 2:\n              _this.setState({\n                loaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1.0,\n            backgroundColor: \"#000\",\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 9\n          }\n        }, React.createElement(ActivityIndicator, {\n          style: {\n            alignSelf: \"center\"\n          },\n          color: \"#fff\",\n          animating: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }));\n      }\n\n      return React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"Splash\",\n        screenOptions: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Splash\",\n        component: Splash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Register\",\n        component: Register,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ForgotPassword\",\n        component: ForgotPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Tabbar\",\n        component: Tabbar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"BookedAppointment\",\n        component: BookedAppointment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"PayPalWebview\",\n        component: PayPalWebview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"Webview\",\n        component: Webview,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }), React.createElement(Stack.Screen, {\n        name: \"ChangePassword\",\n        component: ChangePassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["D:/Work/App-Zip/App.js"],"names":["React","Component","LogBox","Font","ignoreAllLogs","NavigationContainer","createStackNavigator","Stack","Splash","Login","Register","ForgotPassword","Tabbar","BookedAppointment","PayPalWebview","Webview","ChangePassword","App","state","loaded","_loadFontsAsync","loadAsync","Poppins_Light","require","Poppins_Medium","Poppins_Regular","Poppins_SemiBold","setState","flex","backgroundColor","justifyContent","alignSelf","headerShown"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { ActivityIndicator, View, LogBox } from \"react-native\";\nimport * as Font from \"expo-font\";\nLogBox.ignoreAllLogs(true);\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nconst Stack = createStackNavigator();\n\nimport Splash from \"./source/screens/Welcome\";\nimport Login from \"./source/screens/Login\";\nimport Register from \"./source/screens/Register\";\nimport ForgotPassword from \"./source/screens/ForgotPassword\";\nimport Tabbar from \"./source/screens/Tabbar\";\nimport BookedAppointment from \"./source/screens/BookedAppointment\";\nimport PayPalWebview from \"./source/screens/NewAppointment/PayPalWebview\";\nimport Webview from \"./source/screens/Register/Webview\";\nimport ChangePassword from \"./source/screens/ChangePassword.js\";\n\nexport default class App extends Component {\n  state = {\n    loaded: false,\n  };\n\n  _loadFontsAsync = async () => {\n    // loadAsync returns true | error\n    await Font.loadAsync({\n      Poppins_Light: require(\"./assets/fonts/Poppins-Light.ttf\"),\n      Poppins_Medium: require(\"./assets/fonts/Poppins-Medium.ttf\"),\n      Poppins_Regular: require(\"./assets/fonts/Poppins-Regular.ttf\"),\n      Poppins_SemiBold: require(\"./assets/fonts/Poppins-SemiBold.ttf\"),\n    });\n    this.setState({ loaded: true });\n  };\n\n  componentDidMount() {\n    this._loadFontsAsync();\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return (\n        <View\n          style={{\n            flex: 1.0,\n            backgroundColor: \"#000\",\n            justifyContent: \"center\",\n          }}\n        >\n          <ActivityIndicator\n            style={{ alignSelf: \"center\" }}\n            color=\"#fff\"\n            animating={true}\n          />\n        </View>\n      );\n    }\n\n    return (\n      <NavigationContainer>\n        <Stack.Navigator\n          initialRouteName=\"Splash\"\n          screenOptions={{ headerShown: false }}\n        >\n          <Stack.Screen name=\"Splash\" component={Splash} />\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"Register\" component={Register} />\n          <Stack.Screen name=\"ForgotPassword\" component={ForgotPassword} />\n          <Stack.Screen name=\"Tabbar\" component={Tabbar} />\n          <Stack.Screen\n            name=\"BookedAppointment\"\n            component={BookedAppointment}\n          />\n          <Stack.Screen name=\"PayPalWebview\" component={PayPalWebview} />\n          <Stack.Screen name=\"Webview\" component={Webview} />\n          <Stack.Screen name=\"ChangePassword\" component={ChangePassword} />\n        </Stack.Navigator>\n      </NavigationContainer>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}