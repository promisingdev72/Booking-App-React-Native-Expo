{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\screens\\\\Login\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { CommonActions } from '@react-navigation/native';\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport { FONT } from \"../../fonts\";\nimport { Storage } from \"../../constants/GPStorage\";\nimport { apiCallLogin } from \"../../networkcall\";\nimport SnackView from \"../../component/SnackView\";\nimport SmallLoader from \"../../component/SmallLoader\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      password: '',\n      loading: false\n    };\n\n    _this.onPressForgotPassword = function () {\n      _this.props.navigation.navigate('ForgotPassword');\n    };\n\n    _this.onPressLogin = function () {\n      if (!_this.state.username) {\n        _this.refSnackView.showSnack(\"Please enter email address\");\n\n        return;\n      }\n\n      if (!_this.state.password) {\n        _this.refSnackView.showSnack(\"Please enter password\");\n\n        return;\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      apiCallLogin(_this.state.username, _this.state.password).then(function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        var data = response.data;\n        var status = data.status;\n        var message = data.message;\n        console.log(data);\n\n        if (status) {\n          var userData = data.data;\n          Storage.setAsyncItem('userData', {\n            'data': userData\n          });\n\n          _this.props.navigation.dispatch(function (state) {\n            return CommonActions.reset({\n              index: 0,\n              routes: [{\n                name: 'Tabbar'\n              }]\n            });\n          });\n        } else {\n          _this.refSnackView.showSnack(message);\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.onPressFacebook = function () {};\n\n    _this.onPressGoogle = function () {};\n\n    _this.onPressSingup = function () {\n      _this.props.navigation.navigate('Register');\n    };\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n      return React.createElement(ImageBackground, {\n        style: styles.container,\n        source: IMAGE.splash,\n        resizeMode: \"cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }), this.renderStatusBar(), React.createElement(View, {\n        style: styles.loginItemContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.welcomeTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, \"Hi\\nWelcome back!\"), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            username: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Password\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.forgotPasswordContainer,\n        onPress: this.onPressForgotPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.forgotPasswordTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, \"Forgot Your Password?\"))), React.createElement(View, {\n        style: styles.buttonContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onPressLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Log In\"))), React.createElement(TouchableOpacity, {\n        style: styles.singupContainer,\n        onPress: this.onPressSingup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.singupMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }, \"Don't have an account? \"), React.createElement(Text, {\n        style: styles.singupTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, \"Sign up\")), React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }), React.createElement(SnackView, {\n        ref: function ref(refSnackView) {\n          return _this2.refSnackView = refSnackView;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }), React.createElement(SmallLoader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderStatusBar\",\n    value: function renderStatusBar() {\n      return React.createElement(StatusBar, {\n        currentHeight: 20,\n        barStyle: \"light-content\",\n        backgroundColor: COLOR.gold,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["D:/Work/App-Zip/source/screens/Login/index.js"],"names":["React","Component","CommonActions","styles","COLOR","IMAGE","FONT","Storage","apiCallLogin","SnackView","SmallLoader","Login","state","username","password","loading","onPressForgotPassword","props","navigation","navigate","onPressLogin","refSnackView","showSnack","setState","then","response","data","status","message","console","log","userData","setAsyncItem","dispatch","reset","index","routes","name","catch","error","onPressFacebook","onPressGoogle","onPressSingup","container","splash","renderStatusBar","loginItemContainer","welcomeTxt","inputBox","inputField","text","forgotPasswordContainer","forgotPasswordTxt","buttonContainer","button","buttonTxt","singupContainer","singupMessage","singupTxt","gold"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;;;AAGA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,OAAOC,MAAP;AACA,SAASC,KAAT;AACA,SAASC,KAAT;AACA,SAASC,IAAT;AACA,SAASC,OAAT;AACA,SAASC,YAAT;AACA,OAAOC,SAAP;AACA,OAAOC,WAAP;;IAGqBC,K;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,OAAO,EAAE;AAHH,K;;UAMRC,qB,GAAwB,YAAM;AAC5B,YAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,gBAA/B;AACD,K;;UAEDC,Y,GAAe,YAAM;AAEnB,UAAI,CAAC,MAAKR,KAAL,CAAWC,QAAhB,EAA0B;AACxB,cAAKQ,YAAL,CAAkBC,SAAlB,CAA4B,4BAA5B;;AACA;AACD;;AAED,UAAI,CAAC,MAAKV,KAAL,CAAWE,QAAhB,EAA0B;AACxB,cAAKO,YAAL,CAAkBC,SAAlB,CAA4B,uBAA5B;;AACA;AACD;;AAED,YAAKC,QAAL,CAAc;AAAER,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEAP,MAAAA,YAAY,CACV,MAAKI,KAAL,CAAWC,QADD,EAEV,MAAKD,KAAL,CAAWE,QAFD,CAAZ,CAGGU,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClB,cAAKF,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;;AACA,YAAIW,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACA,YAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,YAAIC,OAAO,GAAGF,IAAI,CAACE,OAAnB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,YAAIC,MAAJ,EAAY;AACV,cAAII,QAAQ,GAAGL,IAAI,CAACA,IAApB;AACAnB,UAAAA,OAAO,CAACyB,YAAR,CAAqB,UAArB,EAAiC;AAAE,oBAAQD;AAAV,WAAjC;;AACA,gBAAKd,KAAL,CAAWC,UAAX,CAAsBe,QAAtB,CAA+B,UAAArB,KAAK,EAAI;AACtC,mBAAOV,aAAa,CAACgC,KAAd,CAAoB;AACzBC,cAAAA,KAAK,EAAE,CADkB;AAEzBC,cAAAA,MAAM,EAAE,CAAC;AAAEC,gBAAAA,IAAI,EAAE;AAAR,eAAD;AAFiB,aAApB,CAAP;AAID,WALD;AAMD,SATD,MASO;AACL,gBAAKhB,YAAL,CAAkBC,SAAlB,CAA4BM,OAA5B;AACD;AACF,OArBH,EAsBGU,KAtBH,CAsBS,UAAAC,KAAK,EAAI;AACdV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;;AACA,cAAKhB,QAAL,CAAc;AAAER,UAAAA,OAAO,EAAE;AAAX,SAAd;AACD,OAzBH;AA0BD,K;;UAEDyB,e,GAAkB,YAAM,CAEvB,C;;UAEDC,a,GAAgB,YAAM,CAErB,C;;UAEDC,a,GAAgB,YAAM;AACpB,YAAKzB,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+B,UAA/B;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBACwB,KAAKP,KAD7B;AAAA,UACCC,QADD,eACCA,QADD;AAAA,UACWC,QADX,eACWA,QADX;AAEP,aACE,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAEX,MAAM,CAACwC,SAA/B;AACE,QAAA,MAAM,EAAEtC,KAAK,CAACuC,MADhB;AAEE,QAAA,UAAU,EAAC,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIG,KAAKC,eAAL,EAJH,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE1C,MAAM,CAAC2C,kBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE3C,MAAM,CAAC4C,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE5C,MAAM,CAAC6C,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE7C,MAAM,CAAC8C,UADhB;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEpC,QAHT;AAIE,QAAA,YAAY,EAAE,sBAACqC,IAAD;AAAA,iBAAU,MAAI,CAAC3B,QAAL,CAAc;AAAEV,YAAAA,QAAQ,EAAEqC;AAAZ,WAAd,CAAV;AAAA,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAFF,EASE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE/C,MAAM,CAAC6C,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AACE,QAAA,KAAK,EAAE7C,MAAM,CAAC8C,UADhB;AAEE,QAAA,WAAW,EAAC,UAFd;AAGE,QAAA,KAAK,EAAEnC,QAHT;AAIE,QAAA,eAAe,EAAE,IAJnB;AAKE,QAAA,YAAY,EAAE,sBAACoC,IAAD;AAAA,iBAAU,MAAI,CAAC3B,QAAL,CAAc;AAAET,YAAAA,QAAQ,EAAEoC;AAAZ,WAAd,CAAV;AAAA,SALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,EAiBE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAE/C,MAAM,CAACgD,uBAAhC;AACE,QAAA,OAAO,EAAE,KAAKnC,qBADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACiD,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CAjBF,CALF,EA2BE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjD,MAAM,CAACkD,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAElD,MAAM,CAACmD,MAAhC;AACE,QAAA,OAAO,EAAE,KAAKlC,YADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACoD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,CA3BF,EAyCE,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEpD,MAAM,CAACqD,eAAhC;AACE,QAAA,OAAO,EAAE,KAAKd,aADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvC,MAAM,CAACsD,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,EAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtD,MAAM,CAACuD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CAzCF,EA8CE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA9CF,EA+CE,oBAAC,SAAD;AAAW,QAAA,GAAG,EAAE,aAACrC,YAAD;AAAA,iBAAkB,MAAI,CAACA,YAAL,GAAoBA,YAAtC;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/CF,EAgDE,oBAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAKT,KAAL,CAAWG,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDF,CADF;AAoDD;;;sCAEiB;AAChB,aACE,oBAAC,SAAD;AACE,QAAA,aAAa,EAAE,EADjB;AAEE,QAAA,QAAQ,EAAC,eAFX;AAGE,QAAA,eAAe,EAAEX,KAAK,CAACuD,IAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EAjIgC1D,S;;SAAdU,K","sourcesContent":["import React, { Component } from 'react';\nimport { ImageBackground, TouchableOpacity, Text, View, SafeAreaView, TextInput, StatusBar } from 'react-native';\n\nimport { CommonActions } from '@react-navigation/native';\n\nimport styles from './styles'\nimport { COLOR } from '../../colors'\nimport { IMAGE } from '../../images'\nimport { FONT } from '../../fonts'\nimport { Storage } from '../../constants/GPStorage'\nimport { apiCallLogin } from '../../networkcall'\nimport SnackView from '../../component/SnackView'\nimport SmallLoader from '../../component/SmallLoader'\n\n\nexport default class Login extends Component {\n\n  state = {\n    username: '',\n    password: '',\n    loading: false\n  }\n\n  onPressForgotPassword = () => {\n    this.props.navigation.navigate('ForgotPassword')\n  }\n\n  onPressLogin = () => {\n\n    if (!this.state.username) {\n      this.refSnackView.showSnack(\"Please enter email address\");\n      return\n    }\n\n    if (!this.state.password) {\n      this.refSnackView.showSnack(\"Please enter password\");\n      return\n    }\n\n    this.setState({ loading: true });\n\n    apiCallLogin(\n      this.state.username,\n      this.state.password)\n      .then((response) => {\n        this.setState({ loading: false })\n        let data = response.data;\n        let status = data.status;\n        let message = data.message;\n        console.log(data);\n        if (status) {\n          let userData = data.data;\n          Storage.setAsyncItem('userData', { 'data': userData })  //Store session\n          this.props.navigation.dispatch(state => {              //Navigate Tabbar screen\n            return CommonActions.reset({\n              index: 0,\n              routes: [{ name: 'Tabbar' }]\n            })\n          })\n        } else {\n          this.refSnackView.showSnack(message)\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ loading: false })\n      })\n  }\n\n  onPressFacebook = () => {\n\n  }\n\n  onPressGoogle = () => {\n\n  }\n\n  onPressSingup = () => {\n    this.props.navigation.navigate('Register')\n  }\n\n  render() {\n    const { username, password } = this.state\n    return (\n      <ImageBackground style={styles.container}\n        source={IMAGE.splash}\n        resizeMode='cover'>\n        <SafeAreaView />\n        {this.renderStatusBar()}\n        <View style={styles.loginItemContainer}>\n          <Text style={styles.welcomeTxt}>{`Hi\\nWelcome back!`}</Text>\n          <View style={styles.inputBox}>\n            <TextInput\n              style={styles.inputField}\n              placeholder='Username'\n              value={username}\n              onChangeText={(text) => this.setState({ username: text })} />\n          </View>\n          <View style={styles.inputBox}>\n            <TextInput\n              style={styles.inputField}\n              placeholder='Password'\n              value={password}\n              secureTextEntry={true}\n              onChangeText={(text) => this.setState({ password: text })} />\n          </View>\n          <TouchableOpacity style={styles.forgotPasswordContainer}\n            onPress={this.onPressForgotPassword}>\n            <Text style={styles.forgotPasswordTxt}>{`Forgot Your Password?`}</Text>\n          </TouchableOpacity>\n        </View>\n        <View style={styles.buttonContainer}>\n          <TouchableOpacity style={styles.button}\n            onPress={this.onPressLogin}>\n            <Text style={styles.buttonTxt}>Log In</Text>\n          </TouchableOpacity>\n          {/* <TouchableOpacity style={[styles.button, { backgroundColor: '#134DE3' }]}\n            onPress={this.onPressFacebook}>\n            <Text style={styles.buttonTxt}>Facebook</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={[styles.button, { backgroundColor: '#E62E38' }]}\n            onPress={this.onPressGoogle}>\n            <Text style={styles.buttonTxt}>Google</Text>\n          </TouchableOpacity> */}\n        </View>\n        <TouchableOpacity style={styles.singupContainer}\n          onPress={this.onPressSingup}>\n          <Text style={styles.singupMessage}>{`Don't have an account? `}</Text>\n          <Text style={styles.singupTxt}>{`Sign up`}</Text>\n        </TouchableOpacity>\n        <SafeAreaView />\n        <SnackView ref={(refSnackView) => this.refSnackView = refSnackView} />\n        <SmallLoader loading={this.state.loading} />\n      </ImageBackground>\n    )\n  }\n\n  renderStatusBar() {\n    return (\n      <StatusBar\n        currentHeight={20}\n        barStyle='light-content'\n        backgroundColor={COLOR.gold} />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}