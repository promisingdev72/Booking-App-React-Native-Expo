{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\screens\\\\ChangePassword.js\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport { FONT } from \"../../fonts\";\nimport { apiCallChangePassword } from \"../../networkcall\";\nimport SnackView from \"../../component/SnackView\";\nimport SmallLoader from \"../../component/SmallLoader\";\n\nvar ChangePassword = function (_Component) {\n  _inherits(ChangePassword, _Component);\n\n  var _super = _createSuper(ChangePassword);\n\n  function ChangePassword() {\n    var _this;\n\n    _classCallCheck(this, ChangePassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      password: \"\",\n      confirmPassword: \"\",\n      loading: false\n    };\n\n    _this.onPressBack = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.onPressChangePassword = function () {\n      _this.setState({\n        loading: true\n      });\n\n      var _this$state = _this.state,\n          password = _this$state.password,\n          confirmPassword = _this$state.confirmPassword;\n      apiCallChangePassword(password, confirmPassword).then(function (res) {\n        _this.setState({\n          loading: false\n        });\n\n        if (res.data.status == true) {\n          _this.refSnackView.showSnack(res.data.message);\n\n          setTimeout(function () {\n            _this.props.navigation.goBack();\n          }, 800);\n        } else {\n          _this.refSnackView.showSnack(res.data.message);\n        }\n      }).catch(function (err) {\n        _this.setState({\n          loading: false\n        });\n\n        console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ChangePassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n      return React.createElement(ImageBackground, {\n        style: styles.container,\n        source: IMAGE.splash,\n        resizeMode: \"cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      }, React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      }), this.renderStatusBar(), React.createElement(View, {\n        style: styles.navigationView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: this.onPressBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, React.createElement(Image, {\n        style: styles.backIcon,\n        source: IMAGE.back,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }))), React.createElement(View, {\n        style: styles.loginItemContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.welcomeTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, \"Change Passowrd\"), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"New Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Confirm Password\",\n        value: confirmPassword,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmPassword: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return _this2.onPressChangePassword();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Change Passowrd\"))), React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }\n      }), React.createElement(SnackView, {\n        ref: function ref(refSnackView) {\n          return _this2.refSnackView = refSnackView;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }), React.createElement(SmallLoader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderStatusBar\",\n    value: function renderStatusBar() {\n      return React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: COLOR.gold,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return ChangePassword;\n}(Component);\n\nexport { ChangePassword as default };","map":{"version":3,"sources":["D:/Work/App-Zip/source/screens/ChangePassword.js/index.js"],"names":["React","Component","styles","COLOR","IMAGE","FONT","apiCallChangePassword","SnackView","SmallLoader","ChangePassword","state","password","confirmPassword","loading","onPressBack","props","navigation","goBack","onPressChangePassword","setState","then","res","data","status","refSnackView","showSnack","message","setTimeout","catch","err","console","log","container","splash","renderStatusBar","navigationView","backButton","backIcon","back","loginItemContainer","welcomeTxt","inputBox","inputField","text","button","buttonTxt","gold"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  ImageBackground,\n  TouchableOpacity,\n  Text,\n  View,\n  SafeAreaView,\n  TextInput,\n  Image,\n  StatusBar,\n} from \"react-native\";\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport { FONT } from \"../../fonts\";\nimport { apiCallChangePassword } from \"../../networkcall\";\nimport SnackView from \"../../component/SnackView\";\nimport SmallLoader from \"../../component/SmallLoader\";\n\nexport default class ChangePassword extends Component {\n  state = {\n    password: \"\",\n    confirmPassword: \"\",\n    loading: false,\n  };\n\n  onPressBack = () => {\n    this.props.navigation.goBack();\n  };\n\n  onPressChangePassword = () => {\n    this.setState({ loading: true });\n    const { password, confirmPassword } = this.state;\n    apiCallChangePassword(password, confirmPassword)\n      .then((res) => {\n        this.setState({ loading: false });\n        if (res.data.status == true) {\n          this.refSnackView.showSnack(res.data.message);\n          setTimeout(() => {\n            this.props.navigation.goBack();\n          }, 800);\n        } else {\n          this.refSnackView.showSnack(res.data.message);\n        }\n      })\n      .catch((err) => {\n        this.setState({ loading: false });\n        console.log(err);\n      });\n  };\n\n  render() {\n    const { password, confirmPassword } = this.state;\n    return (\n      <ImageBackground\n        style={styles.container}\n        source={IMAGE.splash}\n        resizeMode=\"cover\"\n      >\n        <SafeAreaView />\n        {this.renderStatusBar()}\n        <View style={styles.navigationView}>\n          <TouchableOpacity\n            style={styles.backButton}\n            onPress={this.onPressBack}\n          >\n            <Image style={styles.backIcon} source={IMAGE.back} />\n          </TouchableOpacity>\n        </View>\n        <View style={styles.loginItemContainer}>\n          <Text style={styles.welcomeTxt}>{`Change Passowrd`}</Text>\n\n          <View style={styles.inputBox}>\n            <TextInput\n              style={styles.inputField}\n              placeholder=\"New Password\"\n              value={password}\n              onChangeText={(text) => this.setState({ password: text })}\n            />\n          </View>\n          <View style={styles.inputBox}>\n            <TextInput\n              style={styles.inputField}\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChangeText={(text) => this.setState({ confirmPassword: text })}\n            />\n          </View>\n          <TouchableOpacity\n            style={styles.button}\n            onPress={() => this.onPressChangePassword()}\n          >\n            <Text style={styles.buttonTxt}>Change Passowrd</Text>\n          </TouchableOpacity>\n        </View>\n        <SafeAreaView />\n        <SnackView ref={(refSnackView) => (this.refSnackView = refSnackView)} />\n        <SmallLoader loading={this.state.loading} />\n      </ImageBackground>\n    );\n  }\n\n  renderStatusBar() {\n    return <StatusBar barStyle=\"light-content\" backgroundColor={COLOR.gold} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}