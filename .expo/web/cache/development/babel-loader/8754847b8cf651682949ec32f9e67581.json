{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useAsyncStorage = useAsyncStorage;\n\nvar _AsyncStorage = _interopRequireDefault(require(\"./AsyncStorage\"));\n\nfunction useAsyncStorage(key) {\n  return {\n    getItem: function getItem() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return _AsyncStorage.default.getItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    setItem: function setItem() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _AsyncStorage.default.setItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    mergeItem: function mergeItem() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _AsyncStorage.default.mergeItem.apply(_AsyncStorage.default, [key].concat(args));\n    },\n    removeItem: function removeItem() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _AsyncStorage.default.removeItem.apply(_AsyncStorage.default, [key].concat(args));\n    }\n  };\n}","map":{"version":3,"sources":["hooks.js"],"names":["getItem","args","AsyncStorage","setItem","mergeItem","removeItem"],"mappings":";;;;;;;AAKA,IAAA,aAAA,GAAA,sBAAA,CAAA,OAAA,kBAAA,CAAA;;AAiBO,SAAA,eAAA,CAAA,GAAA,EAAwD;AAC7D,SAAO;AACLA,IAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,WAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,IAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;AAAJ;;AAAA,aAAaC,aAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAb,IAAaA,CAAAA,CAAb;AADJ,KAAA;AAELC,IAAAA,OAAO,EAAE,SAAA,OAAA,GAAA;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIF,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAaC,aAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAb,IAAaA,CAAAA,CAAb;AAFJ,KAAA;AAGLE,IAAAA,SAAS,EAAE,SAAA,SAAA,GAAA;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIH,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAaC,aAAAA,CAAAA,OAAAA,CAAAA,SAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAb,IAAaA,CAAAA,CAAb;AAHN,KAAA;AAILG,IAAAA,UAAU,EAAE,SAAA,UAAA,GAAA;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIJ,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAaC,aAAAA,CAAAA,OAAAA,CAAAA,UAAAA,CAAAA,KAAAA,CAAAA,aAAAA,CAAAA,OAAAA,EAAAA,CAAAA,GAAAA,EAAAA,MAAAA,CAAb,IAAaA,CAAAA,CAAb;AAJd;AAAO,GAAP;AAMD","sourcesContent":["/**\n * @format\n * @flow\n */\n\nimport AsyncStorage from './AsyncStorage';\n\ntype AsyncStorageHook = {\n  getItem: (\n    callback?: ?(error: ?Error, result: string | null) => void,\n  ) => Promise<string | null>,\n  setItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  mergeItem: (\n    value: string,\n    callback?: ?(error: ?Error) => void,\n  ) => Promise<null>,\n  removeItem: (callback?: ?(error: ?Error) => void) => Promise<null>,\n};\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}