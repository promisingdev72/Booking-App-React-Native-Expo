{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\component\\\\BarberCell.js\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { COLOR } from \"../colors\";\nimport { FONT } from \"../fonts\";\nimport { IMAGE } from \"../images\";\n\nfunction BarberCell(props) {\n  var _this = this;\n\n  var item = props.item,\n      index = props.index,\n      selected = props.selected,\n      _onPress = props.onPress;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalInfoVisible = _useState2[0],\n      setModalInfoVisible = _useState2[1];\n\n  var renderModalBarberInfo = function renderModalBarberInfo() {\n    return React.createElement(Modal, {\n      animationType: \"fade\",\n      transparent: true,\n      visible: modalInfoVisible,\n      onRequestClose: function onRequestClose() {\n        setModalInfoVisible(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, React.createElement(SafeAreaView, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.styleModalContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, React.createElement(TouchableOpacity, {\n      style: styles.styleModalCloseImageContainer,\n      onPress: function onPress() {\n        setModalInfoVisible(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, React.createElement(Image, {\n      source: IMAGE.close,\n      style: styles.styleModalCloseImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    })), React.createElement(ScrollView, {\n      contentContainerStyle: styles.styleModalDetailContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, React.createElement(Image, {\n      source: item.pic,\n      style: styles.styleModalBarberImage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }), React.createElement(Text, {\n      style: {\n        marginTop: 16,\n        fontFamily: FONT.poppins_medium,\n        fontSize: 20,\n        color: COLOR.gold,\n        alignSelf: \"center\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, item.name), React.createElement(Text, {\n      style: {\n        fontFamily: FONT.poppins_regular,\n        fontSize: 14,\n        color: \"#fff\",\n        justifyContent: \"center\",\n        textAlign: \"justify\",\n        marginHorizontal: 16\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, item.description)))));\n  };\n\n  var content = function content() {\n    return React.createElement(TouchableOpacity, {\n      activeOpacity: 0.9,\n      style: styles.container,\n      onPress: function onPress() {\n        if (_onPress) {\n          _onPress(index);\n        } else {\n          setModalInfoVisible(true);\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, React.createElement(Image, {\n      style: styles.style_barber_pic,\n      source: item.pic,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.style_barber_pic_layer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, selected == index && React.createElement(View, {\n      style: styles.style_selected_icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }), React.createElement(Text, {\n      style: styles.style_barber_name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, item.name)), renderModalBarberInfo());\n  };\n\n  return content();\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get(\"window\").width / 2.1,\n    height: Dimensions.get(\"window\").width / 2,\n    marginStart: 6,\n    marginVertical: 4,\n    overflow: \"hidden\"\n  },\n  style_barber_pic: {\n    borderRadius: 8,\n    width: \"100%\",\n    height: \"100%\"\n  },\n  style_barber_pic_layer: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    position: \"absolute\",\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(0,0,0,0.3)\"\n  },\n  style_barber_name: {\n    color: COLOR.gold,\n    fontFamily: FONT.poppins_light,\n    fontSize: 15,\n    position: \"absolute\",\n    bottom: 2,\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingBottom: 8,\n    paddingTop: 16,\n    marginBottom: -5,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16\n  },\n  style_modal_info_container: {\n    backgroundColor: \"white\"\n  },\n  style_selected_icon: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: COLOR.gold,\n    position: \"absolute\",\n    right: 8,\n    top: 8\n  },\n  styleModalContainer: {\n    flex: 1.0,\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0,0,0,1)\"\n  },\n  styleModalDetailContainer: {\n    backgroundColor: \"#000\",\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    flex: 1.0,\n    marginTop: 8,\n    borderWidth: 1,\n    overflow: \"hidden\"\n  },\n  styleModalBarberImage: {\n    width: \"100%\",\n    height: 250\n  },\n  styleModalCloseImageContainer: {\n    width: 56,\n    height: 56,\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\",\n    marginEnd: -24\n  },\n  styleModalCloseImage: {\n    width: 15,\n    height: 15,\n    resizeMode: \"center\"\n  }\n});\nexport default BarberCell;","map":{"version":3,"sources":["D:/Work/App-Zip/source/component/BarberCell.js"],"names":["React","useEffect","useState","COLOR","FONT","IMAGE","BarberCell","props","item","index","selected","onPress","modalInfoVisible","setModalInfoVisible","renderModalBarberInfo","styles","styleModalContainer","styleModalCloseImageContainer","close","styleModalCloseImage","styleModalDetailContainer","pic","styleModalBarberImage","marginTop","fontFamily","poppins_medium","fontSize","color","gold","alignSelf","name","poppins_regular","justifyContent","textAlign","marginHorizontal","description","content","container","style_barber_pic","style_barber_pic_layer","style_selected_icon","style_barber_name","StyleSheet","create","width","Dimensions","get","height","marginStart","marginVertical","overflow","borderRadius","position","backgroundColor","poppins_light","bottom","paddingBottom","paddingTop","marginBottom","borderTopLeftRadius","borderTopRightRadius","style_modal_info_container","right","top","flex","borderWidth","marginEnd","resizeMode"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  Image,\n  Dimensions,\n  Modal,\n  ScrollView,\n  TouchableOpacity,\n} from \"react-native\";\nimport { COLOR } from \"../colors\";\n\nimport { FONT } from \"../fonts\";\nimport { IMAGE } from \"../images\";\n\nfunction BarberCell(props) {\n  const { item, index, selected, onPress } = props;\n\n  const [modalInfoVisible, setModalInfoVisible] = useState(false);\n\n  const renderModalBarberInfo = () => {\n    return (\n      <Modal\n        animationType=\"fade\"\n        transparent={true}\n        visible={modalInfoVisible}\n        onRequestClose={() => {\n          setModalInfoVisible(false);\n        }}\n      >\n        <SafeAreaView />\n        <View style={styles.styleModalContainer}>\n          <TouchableOpacity\n            style={styles.styleModalCloseImageContainer}\n            onPress={() => {\n              setModalInfoVisible(false);\n            }}\n          >\n            <Image source={IMAGE.close} style={styles.styleModalCloseImage} />\n          </TouchableOpacity>\n\n          <ScrollView contentContainerStyle={styles.styleModalDetailContainer}>\n            <View>\n              <Image source={item.pic} style={styles.styleModalBarberImage} />\n              <Text\n                style={{\n                  marginTop: 16,\n                  fontFamily: FONT.poppins_medium,\n                  fontSize: 20,\n                  color: COLOR.gold,\n                  alignSelf: \"center\",\n                }}\n              >\n                {item.name}\n              </Text>\n              <Text\n                style={{\n                  fontFamily: FONT.poppins_regular,\n                  fontSize: 14,\n                  color: \"#fff\",\n                  justifyContent: \"center\",\n                  textAlign: \"justify\",\n                  marginHorizontal: 16,\n                }}\n              >\n                {item.description}\n              </Text>\n            </View>\n          </ScrollView>\n        </View>\n      </Modal>\n    );\n  };\n\n  const content = () => {\n    return (\n      <TouchableOpacity\n        activeOpacity={0.9}\n        style={styles.container}\n        onPress={() => {\n          if (onPress) {\n            onPress(index);\n          } else {\n            setModalInfoVisible(true);\n          }\n        }}\n      >\n        <Image style={styles.style_barber_pic} source={item.pic} />\n        <View style={styles.style_barber_pic_layer}>\n          {selected == index && <View style={styles.style_selected_icon} />}\n          <Text style={styles.style_barber_name}>{item.name}</Text>\n        </View>\n        {renderModalBarberInfo()}\n      </TouchableOpacity>\n    );\n  };\n\n  return content();\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    width: Dimensions.get(\"window\").width / 2.1,\n    height: Dimensions.get(\"window\").width / 2,\n    marginStart: 6,\n    marginVertical: 4,\n    overflow: \"hidden\",\n  },\n  style_barber_pic: {\n    borderRadius: 8,\n    width: \"100%\",\n    height: \"100%\",\n  },\n  style_barber_pic_layer: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    position: \"absolute\",\n    overflow: \"hidden\",\n    backgroundColor: \"rgba(0,0,0,0.3)\",\n  },\n  style_barber_name: {\n    color: COLOR.gold,\n    fontFamily: FONT.poppins_light,\n    fontSize: 15,\n    position: \"absolute\",\n    bottom: 2,\n    backgroundColor: \"rgba(0,0,0,0.7)\",\n    alignSelf: \"center\",\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingBottom: 8,\n    paddingTop: 16,\n    marginBottom: -5,\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n  },\n  style_modal_info_container: {\n    backgroundColor: \"white\",\n  },\n  style_selected_icon: {\n    height: 40,\n    width: 40,\n    borderRadius: 20,\n    backgroundColor: COLOR.gold,\n    position: \"absolute\",\n    right: 8,\n    top: 8,\n  },\n  styleModalContainer: {\n    flex: 1.0,\n    justifyContent: \"center\",\n    backgroundColor: \"rgba(0,0,0,1)\",\n  },\n  styleModalDetailContainer: {\n    backgroundColor: \"#000\",\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 16,\n    flex: 1.0,\n    marginTop: 8,\n    borderWidth: 1,\n    overflow: \"hidden\",\n  },\n  styleModalBarberImage: {\n    width: \"100%\",\n    height: 250,\n  },\n  styleModalCloseImageContainer: {\n    width: 56,\n    height: 56,\n    justifyContent: \"center\",\n    alignSelf: \"flex-end\",\n    marginEnd: -24,\n  },\n  styleModalCloseImage: {\n    width: 15,\n    height: 15,\n    resizeMode: \"center\",\n  },\n});\nexport default BarberCell;\n"]},"metadata":{},"sourceType":"module"}