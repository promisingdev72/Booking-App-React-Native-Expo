{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\node_modules\\\\react-native-calendars\\\\src\\\\agenda\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport * as ReactNative from \"react-native-web/dist/index\";\nimport { extractComponentProps } from \"../component-updater\";\nimport { parseDate, xdateToData } from \"../interface\";\nimport dateutils from \"../dateutils\";\nimport { AGENDA_CALENDAR_KNOB } from \"../testIDs\";\nimport { VelocityTracker } from \"../input\";\nimport styleConstructor from \"./style\";\nimport CalendarList from \"../calendar-list\";\nimport ReservationList from \"./reservation-list\";\nvar HEADER_HEIGHT = 104;\nvar KNOB_HEIGHT = 24;\nvar Text = ReactNative.Text,\n    View = ReactNative.View,\n    Dimensions = ReactNative.Dimensions,\n    Animated = ReactNative.Animated,\n    ViewPropTypes = ReactNative.ViewPropTypes;\nvar viewPropTypes = typeof document !== 'undefined' ? PropTypes.shape({\n  style: PropTypes.object\n}) : ViewPropTypes || View.propTypes;\n\nvar AgendaView = function (_Component) {\n  _inherits(AgendaView, _Component);\n\n  var _super = _createSuper(AgendaView);\n\n  function AgendaView(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaView);\n\n    _this = _super.call(this, props);\n\n    _this.initialScrollPadPosition = function () {\n      return Math.max(0, _this.viewHeight - HEADER_HEIGHT);\n    };\n\n    _this.setScrollPadPosition = function (y, animated) {\n      if (_this.scrollPad.scrollTo) {\n        _this.scrollPad.scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      } else {\n        _this.scrollPad.getNode().scrollTo({\n          x: 0,\n          y: y,\n          animated: animated\n        });\n      }\n    };\n\n    _this.chooseDayFromCalendar = function (d) {\n      _this.chooseDay(d, !_this.state.calendarScrollable);\n    };\n\n    _this.generateMarkings = function () {\n      var _this$props = _this.props,\n          markedDates = _this$props.markedDates,\n          items = _this$props.items;\n      var markings = markedDates;\n\n      if (!markings) {\n        markings = {};\n        Object.keys(items || {}).forEach(function (key) {\n          if (items[key] && items[key].length) {\n            markings[key] = {\n              marked: true\n            };\n          }\n        });\n      }\n\n      var key = _this.state.selectedDay.toString('yyyy-MM-dd');\n\n      return _objectSpread(_objectSpread({}, markings), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, markings[key] || {}), {\n        selected: true\n      })));\n    };\n\n    _this.onScrollPadLayout = function () {\n      _this.setScrollPadPosition(_this.initialScrollPadPosition(), false);\n\n      setTimeout(function () {\n        return _this.setState({\n          calendarIsReady: true\n        });\n      }, 0);\n    };\n\n    _this.onCalendarListLayout = function () {\n      _this.calendar.scrollToDay(_this.state.selectedDay.clone(), _this.calendarOffset(), false);\n    };\n\n    _this.onLayout = function (event) {\n      _this.viewHeight = event.nativeEvent.layout.height;\n      _this.viewWidth = event.nativeEvent.layout.width;\n\n      _this.forceUpdate();\n    };\n\n    _this.onTouchStart = function () {\n      _this.headerState = 'touched';\n\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 0.5\n          }\n        });\n      }\n    };\n\n    _this.onTouchEnd = function () {\n      if (_this.knob) {\n        _this.knob.setNativeProps({\n          style: {\n            opacity: 1\n          }\n        });\n      }\n\n      if (_this.headerState === 'touched') {\n        _this.setScrollPadPosition(0, true);\n\n        _this.enableCalendarScrolling();\n      }\n\n      _this.headerState = 'idle';\n    };\n\n    _this.onStartDrag = function () {\n      _this.headerState = 'dragged';\n\n      _this.knobTracker.reset();\n    };\n\n    _this.onSnapAfterDrag = function (e) {\n      _this.onTouchEnd();\n\n      var currentY = e.nativeEvent.contentOffset.y;\n\n      _this.knobTracker.add(currentY);\n\n      var projectedY = currentY + _this.knobTracker.estimateSpeed() * 250;\n\n      var maxY = _this.initialScrollPadPosition();\n\n      var snapY = projectedY > maxY / 2 ? maxY : 0;\n\n      _this.setScrollPadPosition(snapY, true);\n\n      if (snapY === 0) {\n        _this.enableCalendarScrolling();\n      }\n    };\n\n    _this.onVisibleMonthsChange = function (months) {\n      _.invoke(_this.props, 'onVisibleMonthsChange', months);\n\n      if (_this.props.items && !_this.state.firstReservationLoad) {\n        clearTimeout(_this.scrollTimeout);\n        _this.scrollTimeout = setTimeout(function () {\n          if (_this._isMounted) {\n            _.invoke(_this.props, 'loadItemsForMonth', months[0]);\n          }\n        }, 200);\n      }\n    };\n\n    _this.onDayChange = function (day) {\n      var newDate = parseDate(day);\n      var withAnimation = dateutils.sameMonth(newDate, _this.state.selectedDay);\n\n      _this.calendar.scrollToDay(day, _this.calendarOffset(), withAnimation);\n\n      _this.setState({\n        selectedDay: newDate\n      });\n\n      _.invoke(_this.props, 'onDayChange', xdateToData(newDate));\n    };\n\n    _this.style = styleConstructor(props.theme);\n    var windowSize = Dimensions.get('window');\n    _this.viewHeight = windowSize.height;\n    _this.viewWidth = windowSize.width;\n    _this.scrollTimeout = undefined;\n    _this.headerState = 'idle';\n    _this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || XDate(true),\n      topDay: parseDate(props.selected) || XDate(true)\n    };\n    _this.currentMonth = _this.state.selectedDay.clone();\n    _this.knobTracker = new VelocityTracker();\n\n    _this.state.scrollY.addListener(function (_ref) {\n      var value = _ref.value;\n      return _this.knobTracker.add(value);\n    });\n\n    return _this;\n  }\n\n  _createClass(AgendaView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n      this.loadReservations(this.props);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n      this.state.scrollY.removeAllListeners();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (!prevProps.items) {\n        this.loadReservations(this.props);\n      }\n    }\n  }, {\n    key: \"calendarOffset\",\n    value: function calendarOffset() {\n      return 96 - this.viewHeight / 2;\n    }\n  }, {\n    key: \"enableCalendarScrolling\",\n    value: function enableCalendarScrolling() {\n      this.setState({\n        calendarScrollable: true\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', true);\n\n      this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n    }\n  }, {\n    key: \"loadReservations\",\n    value: function loadReservations(props) {\n      var _this2 = this;\n\n      if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n        this.setState({\n          firstReservationLoad: true\n        }, function () {\n          _.invoke(_this2.props, 'loadItemsForMonth', xdateToData(_this2.state.selectedDay));\n        });\n      }\n    }\n  }, {\n    key: \"chooseDay\",\n    value: function chooseDay(d, optimisticScroll) {\n      var day = parseDate(d);\n      this.setState({\n        calendarScrollable: false,\n        selectedDay: day.clone()\n      });\n\n      _.invoke(this.props, 'onCalendarToggled', false);\n\n      if (!optimisticScroll) {\n        this.setState({\n          topDay: day.clone()\n        });\n      }\n\n      this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n      this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n      _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n\n      _.invoke(this.props, 'onDayPress', xdateToData(day));\n    }\n  }, {\n    key: \"renderReservations\",\n    value: function renderReservations() {\n      var _this3 = this;\n\n      var reservationListProps = extractComponentProps(ReservationList, this.props);\n      return React.createElement(ReservationList, _extends({}, reservationListProps, {\n        ref: function ref(c) {\n          return _this3.list = c;\n        },\n        reservations: this.props.items,\n        selectedDay: this.state.selectedDay,\n        topDay: this.state.topDay,\n        onDayChange: this.onDayChange,\n        onScroll: function onScroll() {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderCalendarList\",\n    value: function renderCalendarList() {\n      var _this4 = this;\n\n      var shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n      var calendarListProps = extractComponentProps(CalendarList, this.props);\n      return React.createElement(CalendarList, _extends({}, calendarListProps, {\n        ref: function ref(c) {\n          return _this4.calendar = c;\n        },\n        current: this.currentMonth,\n        markedDates: this.generateMarkings(),\n        calendarWidth: this.viewWidth,\n        scrollEnabled: this.state.calendarScrollable,\n        hideExtraDays: shouldHideExtraDays,\n        onLayout: this.onCalendarListLayout,\n        onDayPress: this.chooseDayFromCalendar,\n        onVisibleMonthsChange: this.onVisibleMonthsChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"renderKnob\",\n    value: function renderKnob() {\n      var _this5 = this;\n\n      var _this$props2 = this.props,\n          hideKnob = _this$props2.hideKnob,\n          renderKnob = _this$props2.renderKnob;\n      var knob = React.createElement(View, {\n        style: this.style.knobContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 16\n        }\n      });\n\n      if (!hideKnob) {\n        var knobView = renderKnob ? renderKnob() : React.createElement(View, {\n          style: this.style.knob,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 52\n          }\n        });\n        knob = this.state.calendarScrollable ? null : React.createElement(View, {\n          style: this.style.knobContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          ref: function ref(c) {\n            return _this5.knob = c;\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 11\n          }\n        }, knobView));\n      }\n\n      return knob;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var _this$props3 = this.props,\n          firstDay = _this$props3.firstDay,\n          hideKnob = _this$props3.hideKnob,\n          showWeekNumbers = _this$props3.showWeekNumbers,\n          style = _this$props3.style,\n          testID = _this$props3.testID;\n      var agendaHeight = this.initialScrollPadPosition();\n      var weekDaysNames = dateutils.weekDayNames(firstDay);\n      var weekdaysStyle = [this.style.weekdays, {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [{\n          translateY: this.state.scrollY.interpolate({\n            inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n            outputRange: [-HEADER_HEIGHT, 0],\n            extrapolate: 'clamp'\n          })\n        }]\n      }];\n      var headerTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [agendaHeight, 0],\n        extrapolate: 'clamp'\n      });\n      var contentTranslate = this.state.scrollY.interpolate({\n        inputRange: [0, agendaHeight],\n        outputRange: [0, agendaHeight / 2],\n        extrapolate: 'clamp'\n      });\n      var headerStyle = [this.style.header, {\n        bottom: agendaHeight,\n        transform: [{\n          translateY: headerTranslate\n        }]\n      }];\n\n      if (!this.state.calendarIsReady) {\n        headerStyle.push({\n          height: 0\n        });\n        weekdaysStyle.push({\n          height: HEADER_HEIGHT\n        });\n      }\n\n      var shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n      var scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n      var scrollPadStyle = {\n        position: 'absolute',\n        width: 80,\n        height: KNOB_HEIGHT,\n        top: scrollPadPosition,\n        left: (this.viewWidth - 80) / 2\n      };\n      return React.createElement(View, {\n        testID: testID,\n        onLayout: this.onLayout,\n        style: [style, {\n          flex: 1,\n          overflow: 'hidden'\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: this.style.reservations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }\n      }, this.renderReservations()), React.createElement(Animated.View, {\n        style: headerStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: {\n          flex: 1,\n          transform: [{\n            translateY: contentTranslate\n          }]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, this.renderCalendarList()), this.renderKnob()), React.createElement(Animated.View, {\n        style: weekdaysStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }\n      }, showWeekNumbers && React.createElement(Text, {\n        allowFontScaling: false,\n        style: this.style.weekday,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 31\n        }\n      }), weekDaysNames.map(function (day, index) {\n        return React.createElement(Text, {\n          allowFontScaling: false,\n          key: day + index,\n          style: _this6.style.weekday,\n          numberOfLines: 1,\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }\n        }, day);\n      })), React.createElement(Animated.ScrollView, {\n        ref: function ref(_ref2) {\n          return _this6.scrollPad = _ref2;\n        },\n        style: scrollPadStyle,\n        overScrollMode: \"never\",\n        showsHorizontalScrollIndicator: false,\n        showsVerticalScrollIndicator: false,\n        scrollEventThrottle: 8,\n        scrollsToTop: false,\n        onTouchStart: this.onTouchStart,\n        onTouchEnd: this.onTouchEnd,\n        onScrollBeginDrag: this.onStartDrag,\n        onScrollEndDrag: this.onSnapAfterDrag,\n        onScroll: Animated.event([{\n          nativeEvent: {\n            contentOffset: {\n              y: this.state.scrollY\n            }\n          }\n        }], {\n          useNativeDriver: true\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        testID: AGENDA_CALENDAR_KNOB,\n        style: {\n          height: agendaHeight + KNOB_HEIGHT\n        },\n        onLayout: this.onScrollPadLayout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }\n      })));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (nextProps.items) {\n        return {\n          firstReservationLoad: false\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return AgendaView;\n}(Component);\n\nAgendaView.displayName = 'Agenda';\nAgendaView.propTypes = _objectSpread(_objectSpread(_objectSpread({}, CalendarList.propTypes), ReservationList.propTypes), {}, {\n  style: viewPropTypes.style,\n  items: PropTypes.object,\n  loadItemsForMonth: PropTypes.func,\n  onCalendarToggled: PropTypes.func,\n  onDayPress: PropTypes.func,\n  onDaychange: PropTypes.func,\n  renderKnob: PropTypes.func,\n  selected: PropTypes.any,\n  hideKnob: PropTypes.bool\n});\nexport { AgendaView as default };","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/agenda/index.js"],"names":["_","PropTypes","XDate","React","Component","ReactNative","extractComponentProps","parseDate","xdateToData","dateutils","AGENDA_CALENDAR_KNOB","VelocityTracker","styleConstructor","CalendarList","ReservationList","HEADER_HEIGHT","KNOB_HEIGHT","Text","View","Dimensions","Animated","ViewPropTypes","viewPropTypes","document","shape","style","object","propTypes","AgendaView","props","initialScrollPadPosition","Math","max","viewHeight","setScrollPadPosition","y","animated","scrollPad","scrollTo","x","getNode","chooseDayFromCalendar","d","chooseDay","state","calendarScrollable","generateMarkings","markedDates","items","markings","Object","keys","forEach","key","length","marked","selectedDay","toString","selected","onScrollPadLayout","setTimeout","setState","calendarIsReady","onCalendarListLayout","calendar","scrollToDay","clone","calendarOffset","onLayout","event","nativeEvent","layout","height","viewWidth","width","forceUpdate","onTouchStart","headerState","knob","setNativeProps","opacity","onTouchEnd","enableCalendarScrolling","onStartDrag","knobTracker","reset","onSnapAfterDrag","e","currentY","contentOffset","add","projectedY","estimateSpeed","maxY","snapY","onVisibleMonthsChange","months","invoke","firstReservationLoad","clearTimeout","scrollTimeout","_isMounted","onDayChange","day","newDate","withAnimation","sameMonth","theme","windowSize","get","undefined","scrollY","Value","topDay","currentMonth","addListener","value","loadReservations","removeAllListeners","prevProps","optimisticScroll","reservationListProps","c","list","shouldHideExtraDays","hideExtraDays","calendarListProps","hideKnob","renderKnob","knobContainer","knobView","firstDay","showWeekNumbers","testID","agendaHeight","weekDaysNames","weekDayNames","weekdaysStyle","weekdays","interpolate","inputRange","outputRange","extrapolate","transform","translateY","headerTranslate","contentTranslate","headerStyle","header","bottom","push","shouldAllowDragging","scrollPadPosition","scrollPadStyle","position","top","left","flex","overflow","reservations","renderReservations","renderCalendarList","weekday","map","index","ref","useNativeDriver","nextProps","displayName","loadItemsForMonth","func","onCalendarToggled","onDayPress","onDaychange","any","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component} from 'react';\nimport * as ReactNative from 'react-native';\nimport {extractComponentProps} from '../component-updater';\nimport {parseDate, xdateToData} from '../interface';\nimport dateutils from '../dateutils';\nimport {AGENDA_CALENDAR_KNOB} from '../testIDs';\nimport {VelocityTracker} from '../input';\nimport styleConstructor from './style';\nimport CalendarList from '../calendar-list';\nimport ReservationList from './reservation-list';\n\nconst HEADER_HEIGHT = 104;\nconst KNOB_HEIGHT = 24;\n\n//Fallback for react-native-web or when RN version is < 0.44\nconst {Text, View, Dimensions, Animated, ViewPropTypes} = ReactNative;\nconst viewPropTypes =\n  typeof document !== 'undefined' ? PropTypes.shape({style: PropTypes.object}) : ViewPropTypes || View.propTypes;\n\n/**\n * @description: Agenda component\n * @extends: CalendarList\n * @extendslink: docs/CalendarList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/agenda.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/agenda.gif\n */\nexport default class AgendaView extends Component {\n  static displayName = 'Agenda';\n\n  static propTypes = {\n    ...CalendarList.propTypes,\n    ...ReservationList.propTypes,\n    /** agenda container style */\n    style: viewPropTypes.style,\n    /** the list of items that have to be displayed in agenda. If you want to render item as empty date\n     the value of date key has to be an empty array []. If there exists no value for date key it is\n     considered that the date in question is not yet loaded */\n    items: PropTypes.object,\n    /** callback that gets called when items for a certain month should be loaded (month became visible) */\n    loadItemsForMonth: PropTypes.func,\n    /** callback that fires when the calendar is opened or closed */\n    onCalendarToggled: PropTypes.func,\n    /** callback that gets called on day press */\n    onDayPress: PropTypes.func,\n    /** callback that gets called when day changes while scrolling agenda list */\n    onDaychange: PropTypes.func, //TODO: Should be renamed 'onDayChange'\n    /** specify how agenda knob should look like */\n    renderKnob: PropTypes.func, \n    /** initially selected day */ \n    selected: PropTypes.any, //TODO: Should be renamed 'selectedDay'\n    /** Hide knob button. Default = false */\n    hideKnob: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    const windowSize = Dimensions.get('window');\n    this.viewHeight = windowSize.height;\n    this.viewWidth = windowSize.width;\n\n    this.scrollTimeout = undefined;\n    this.headerState = 'idle';\n\n    this.state = {\n      scrollY: new Animated.Value(0),\n      calendarIsReady: false,\n      calendarScrollable: false,\n      firstReservationLoad: false,\n      selectedDay: parseDate(props.selected) || XDate(true),\n      topDay: parseDate(props.selected) || XDate(true)\n    };\n\n    this.currentMonth = this.state.selectedDay.clone();\n\n    this.knobTracker = new VelocityTracker();\n    this.state.scrollY.addListener(({value}) => this.knobTracker.add(value));\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.loadReservations(this.props);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    this.state.scrollY.removeAllListeners();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.items) {\n      this.loadReservations(this.props);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps) {\n    if (nextProps.items) {\n      return {firstReservationLoad: false};\n    }\n\n    return null;\n  }\n\n  calendarOffset() {\n    return 96 - this.viewHeight / 2;\n  }\n\n  initialScrollPadPosition = () => {\n    return Math.max(0, this.viewHeight - HEADER_HEIGHT);\n  };\n\n  setScrollPadPosition = (y, animated) => {\n    if (this.scrollPad.scrollTo) {\n      this.scrollPad.scrollTo({x: 0, y, animated});\n    } else {\n      // Support for RN O.61 (Expo 37)\n      this.scrollPad.getNode().scrollTo({x: 0, y, animated});\n    }\n  };\n\n  enableCalendarScrolling() {\n    this.setState({\n      calendarScrollable: true\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', true);\n\n    // Enlarge calendarOffset here as a workaround on iOS to force repaint.\n    // Otherwise the month after current one or before current one remains invisible.\n    // The problem is caused by overflow: 'hidden' style, which we need for dragging\n    // to be performant.\n    // Another working solution for this bug would be to set removeClippedSubviews={false}\n    // in CalendarList listView, but that might impact performance when scrolling\n    // month list in expanded CalendarList.\n    // Further info https://github.com/facebook/react-native/issues/1831\n    this.calendar.scrollToDay(this.state.selectedDay, this.calendarOffset() + 1, true);\n  }\n\n  loadReservations(props) {\n    if ((!props.items || !Object.keys(props.items).length) && !this.state.firstReservationLoad) {\n      this.setState(\n        {\n          firstReservationLoad: true\n        },\n        () => {\n          _.invoke(this.props, 'loadItemsForMonth', xdateToData(this.state.selectedDay));\n        }\n      );\n    }\n  }\n\n  chooseDayFromCalendar = d => {\n    this.chooseDay(d, !this.state.calendarScrollable);\n  };\n\n  chooseDay(d, optimisticScroll) {\n    const day = parseDate(d);\n\n    this.setState({\n      calendarScrollable: false,\n      selectedDay: day.clone()\n    });\n\n    _.invoke(this.props, 'onCalendarToggled', false);\n\n    if (!optimisticScroll) {\n      this.setState({\n        topDay: day.clone()\n      });\n    }\n\n    this.setScrollPadPosition(this.initialScrollPadPosition(), true);\n    this.calendar.scrollToDay(day, this.calendarOffset(), true);\n\n    _.invoke(this.props, 'loadItemsForMonth', xdateToData(day));\n    _.invoke(this.props, 'onDayPress', xdateToData(day));\n  }\n\n  generateMarkings = () => {\n    const {markedDates, items} = this.props;\n    let markings = markedDates;\n\n    if (!markings) {\n      markings = {};\n      Object.keys(items || {}).forEach(key => {\n        if (items[key] && items[key].length) {\n          markings[key] = {marked: true};\n        }\n      });\n    }\n\n    const key = this.state.selectedDay.toString('yyyy-MM-dd');\n    return {...markings, [key]: {...(markings[key] || {}), ...{selected: true}}};\n  };\n\n  onScrollPadLayout = () => {\n    // When user touches knob, the actual component that receives touch events is a ScrollView.\n    // It needs to be scrolled to the bottom, so that when user moves finger downwards,\n    // scroll position actually changes (it would stay at 0, when scrolled to the top).\n    this.setScrollPadPosition(this.initialScrollPadPosition(), false);\n    // delay rendering calendar in full height because otherwise it still flickers sometimes\n    setTimeout(() => this.setState({calendarIsReady: true}), 0);\n  };\n\n  onCalendarListLayout = () => {\n    this.calendar.scrollToDay(this.state.selectedDay.clone(), this.calendarOffset(), false);\n  };\n\n  onLayout = event => {\n    this.viewHeight = event.nativeEvent.layout.height;\n    this.viewWidth = event.nativeEvent.layout.width;\n    this.forceUpdate();\n  };\n\n  onTouchStart = () => {\n    this.headerState = 'touched';\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 0.5}});\n    }\n  };\n\n  onTouchEnd = () => {\n    if (this.knob) {\n      this.knob.setNativeProps({style: {opacity: 1}});\n    }\n\n    if (this.headerState === 'touched') {\n      this.setScrollPadPosition(0, true);\n      this.enableCalendarScrolling();\n    }\n\n    this.headerState = 'idle';\n  };\n\n  onStartDrag = () => {\n    this.headerState = 'dragged';\n    this.knobTracker.reset();\n  };\n\n  onSnapAfterDrag = e => {\n    // on Android onTouchEnd is not called if dragging was started\n    this.onTouchEnd();\n    const currentY = e.nativeEvent.contentOffset.y;\n    this.knobTracker.add(currentY);\n    const projectedY = currentY + this.knobTracker.estimateSpeed() * 250; /*ms*/\n    const maxY = this.initialScrollPadPosition();\n    const snapY = projectedY > maxY / 2 ? maxY : 0;\n    this.setScrollPadPosition(snapY, true);\n\n    if (snapY === 0) {\n      this.enableCalendarScrolling();\n    }\n  };\n\n  onVisibleMonthsChange = months => {\n    _.invoke(this.props, 'onVisibleMonthsChange', months);\n\n    if (this.props.items && !this.state.firstReservationLoad) {\n      clearTimeout(this.scrollTimeout);\n\n      this.scrollTimeout = setTimeout(() => {\n        if (this._isMounted) {\n          _.invoke(this.props, 'loadItemsForMonth', months[0]);\n        }\n      }, 200);\n    }\n  };\n\n  onDayChange = day => {\n    const newDate = parseDate(day);\n    const withAnimation = dateutils.sameMonth(newDate, this.state.selectedDay);\n\n    this.calendar.scrollToDay(day, this.calendarOffset(), withAnimation);\n    this.setState({\n      selectedDay: newDate\n    });\n\n    _.invoke(this.props, 'onDayChange', xdateToData(newDate));\n  };\n\n  renderReservations() {\n    const reservationListProps = extractComponentProps(ReservationList, this.props);\n\n    return (\n      <ReservationList\n        {...reservationListProps}\n        ref={c => (this.list = c)}\n        reservations={this.props.items}\n        selectedDay={this.state.selectedDay}\n        topDay={this.state.topDay}\n        onDayChange={this.onDayChange}\n        onScroll={() => {}}\n      />\n    );\n  }\n\n  renderCalendarList() {\n    const shouldHideExtraDays = this.state.calendarScrollable ? this.props.hideExtraDays : false;\n    const calendarListProps = extractComponentProps(CalendarList, this.props);\n\n    return (\n      <CalendarList\n        {...calendarListProps}\n        ref={c => (this.calendar = c)}\n        current={this.currentMonth}\n        markedDates={this.generateMarkings()}\n        calendarWidth={this.viewWidth}\n        scrollEnabled={this.state.calendarScrollable}\n        hideExtraDays={shouldHideExtraDays}\n        onLayout={this.onCalendarListLayout}\n        onDayPress={this.chooseDayFromCalendar}\n        onVisibleMonthsChange={this.onVisibleMonthsChange}\n      />\n    );\n  }\n\n  renderKnob() {\n    const {hideKnob, renderKnob} = this.props;\n    let knob = <View style={this.style.knobContainer} />;\n\n    if (!hideKnob) {\n      const knobView = renderKnob ? renderKnob() : <View style={this.style.knob} />;\n      knob = this.state.calendarScrollable ? null : (\n        <View style={this.style.knobContainer}>\n          <View ref={c => (this.knob = c)}>{knobView}</View>\n        </View>\n      );\n    }\n    return knob;\n  }\n\n  render() {\n    const {firstDay, hideKnob, showWeekNumbers, style, testID} = this.props;\n    const agendaHeight = this.initialScrollPadPosition();\n    const weekDaysNames = dateutils.weekDayNames(firstDay);\n    const weekdaysStyle = [\n      this.style.weekdays,\n      {\n        opacity: this.state.scrollY.interpolate({\n          inputRange: [agendaHeight - HEADER_HEIGHT, agendaHeight],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        }),\n        transform: [\n          {\n            translateY: this.state.scrollY.interpolate({\n              inputRange: [Math.max(0, agendaHeight - HEADER_HEIGHT), agendaHeight],\n              outputRange: [-HEADER_HEIGHT, 0],\n              extrapolate: 'clamp'\n            })\n          }\n        ]\n      }\n    ];\n    const headerTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [agendaHeight, 0],\n      extrapolate: 'clamp'\n    });\n    const contentTranslate = this.state.scrollY.interpolate({\n      inputRange: [0, agendaHeight],\n      outputRange: [0, agendaHeight / 2],\n      extrapolate: 'clamp'\n    });\n    const headerStyle = [\n      this.style.header,\n      {\n        bottom: agendaHeight,\n        transform: [{translateY: headerTranslate}]\n      }\n    ];\n\n    if (!this.state.calendarIsReady) {\n      // limit header height until everything is setup for calendar dragging\n      headerStyle.push({height: 0});\n      // fill header with appStyle.calendarBackground background to reduce flickering\n      weekdaysStyle.push({height: HEADER_HEIGHT});\n    }\n\n    const shouldAllowDragging = !hideKnob && !this.state.calendarScrollable;\n    const scrollPadPosition = (shouldAllowDragging ? HEADER_HEIGHT : 0) - KNOB_HEIGHT;\n    const scrollPadStyle = {\n      position: 'absolute',\n      width: 80,\n      height: KNOB_HEIGHT,\n      top: scrollPadPosition,\n      left: (this.viewWidth - 80) / 2\n    };\n\n    return (\n      <View testID={testID} onLayout={this.onLayout} style={[style, {flex: 1, overflow: 'hidden'}]}>\n        <View style={this.style.reservations}>{this.renderReservations()}</View>\n        <Animated.View style={headerStyle}>\n          <Animated.View style={{flex: 1, transform: [{translateY: contentTranslate}]}}>\n            {this.renderCalendarList()}\n          </Animated.View>\n          {this.renderKnob()}\n        </Animated.View>\n        <Animated.View style={weekdaysStyle}>\n          {showWeekNumbers && <Text allowFontScaling={false} style={this.style.weekday} numberOfLines={1}></Text>}\n          {weekDaysNames.map((day, index) => (\n            <Text allowFontScaling={false} key={day + index} style={this.style.weekday} numberOfLines={1}>\n              {day}\n            </Text>\n          ))}\n        </Animated.View>\n        <Animated.ScrollView\n          ref={ref => (this.scrollPad = ref)}\n          style={scrollPadStyle}\n          overScrollMode=\"never\"\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          scrollEventThrottle={8}\n          scrollsToTop={false}\n          onTouchStart={this.onTouchStart}\n          onTouchEnd={this.onTouchEnd}\n          onScrollBeginDrag={this.onStartDrag}\n          onScrollEndDrag={this.onSnapAfterDrag}\n          onScroll={Animated.event([{nativeEvent: {contentOffset: {y: this.state.scrollY}}}], {useNativeDriver: true})}\n        >\n          <View\n            testID={AGENDA_CALENDAR_KNOB}\n            style={{height: agendaHeight + KNOB_HEIGHT}}\n            onLayout={this.onScrollPadLayout}\n          />\n        </Animated.ScrollView>\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}