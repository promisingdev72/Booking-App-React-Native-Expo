{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\basic\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, { Component, Fragment } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { shouldUpdate } from \"../../../component-updater\";\nimport styleConstructor from \"./style\";\nimport Marking from \"../marking\";\n\nvar BasicDay = function (_Component) {\n  _inherits(BasicDay, _Component);\n\n  var _super = _createSuper(BasicDay);\n\n  function BasicDay(props) {\n    var _this;\n\n    _classCallCheck(this, BasicDay);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      _.invoke(_this.props, 'onPress', _this.props.date);\n    };\n\n    _this.onLongPress = function () {\n      _.invoke(_this.props, 'onLongPress', _this.props.date);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    return _this;\n  }\n\n  _createClass(BasicDay, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return shouldUpdate(this.props, nextProps, ['children', 'state', 'markingType', 'marking', 'onPress', 'onLongPress', 'date']);\n    }\n  }, {\n    key: \"shouldDisableTouchEvent\",\n    value: function shouldDisableTouchEvent() {\n      var disableAllTouchEventsForDisabledDays = this.props.disableAllTouchEventsForDisabledDays;\n      var disableTouchEvent = this.marking.disableTouchEvent;\n      var disableTouch = false;\n\n      if (typeof disableTouchEvent === 'boolean') {\n        disableTouch = disableTouchEvent;\n      } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && this.isDisabled()) {\n        disableTouch = disableAllTouchEventsForDisabledDays;\n      }\n\n      return disableTouch;\n    }\n  }, {\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      return typeof this.marking.disabled !== 'undefined' ? this.marking.disabled : this.props.state === 'disabled';\n    }\n  }, {\n    key: \"isToday\",\n    value: function isToday() {\n      return this.props.state === 'today';\n    }\n  }, {\n    key: \"isMultiDot\",\n    value: function isMultiDot() {\n      return this.props.markingType === Marking.markingTypes.multiDot;\n    }\n  }, {\n    key: \"isMultiPeriod\",\n    value: function isMultiPeriod() {\n      return this.props.markingType === Marking.markingTypes.multiPeriod;\n    }\n  }, {\n    key: \"isCustom\",\n    value: function isCustom() {\n      return this.props.markingType === Marking.markingTypes.custom;\n    }\n  }, {\n    key: \"getContainerStyle\",\n    value: function getContainerStyle() {\n      var _this$props$marking = this.props.marking,\n          customStyles = _this$props$marking.customStyles,\n          selected = _this$props$marking.selected,\n          selectedColor = _this$props$marking.selectedColor;\n      var style = [this.style.base];\n\n      if (selected) {\n        style.push(this.style.selected);\n\n        if (selectedColor) {\n          style.push({\n            backgroundColor: selectedColor\n          });\n        }\n      } else if (this.isToday()) {\n        style.push(this.style.today);\n      }\n\n      if (this.isCustom() && customStyles && customStyles.container) {\n        if (customStyles.container.borderRadius === undefined) {\n          customStyles.container.borderRadius = 16;\n        }\n\n        style.push(customStyles.container);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"getTextStyle\",\n    value: function getTextStyle() {\n      var _this$props$marking2 = this.props.marking,\n          customStyles = _this$props$marking2.customStyles,\n          selected = _this$props$marking2.selected,\n          selectedTextColor = _this$props$marking2.selectedTextColor;\n      var style = [this.style.text];\n\n      if (selected) {\n        style.push(this.style.selectedText);\n\n        if (selectedTextColor) {\n          style.push({\n            color: selectedTextColor\n          });\n        }\n      } else if (this.isDisabled()) {\n        style.push(this.style.disabledText);\n      } else if (this.isToday()) {\n        style.push(this.style.todayText);\n      }\n\n      if (this.isCustom() && customStyles && customStyles.text) {\n        style.push(customStyles.text);\n      }\n\n      return style;\n    }\n  }, {\n    key: \"renderMarking\",\n    value: function renderMarking() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          markingType = _this$props.markingType;\n      var _this$marking = this.marking,\n          selected = _this$marking.selected,\n          marked = _this$marking.marked,\n          dotColor = _this$marking.dotColor,\n          dots = _this$marking.dots,\n          periods = _this$marking.periods;\n      return React.createElement(Marking, {\n        type: markingType,\n        theme: theme,\n        marked: this.isMultiDot() ? true : marked,\n        selected: selected,\n        disabled: this.isDisabled(),\n        today: this.isToday(),\n        dotColor: dotColor,\n        dots: dots,\n        periods: periods,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderText\",\n    value: function renderText() {\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: this.getTextStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 7\n        }\n      }, String(this.props.children));\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      return React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 7\n        }\n      }, this.renderText(), this.renderMarking());\n    }\n  }, {\n    key: \"renderContainer\",\n    value: function renderContainer() {\n      var activeOpacity = this.marking.activeOpacity;\n      return React.createElement(TouchableOpacity, {\n        testID: this.props.testID,\n        style: this.getContainerStyle(),\n        disabled: this.shouldDisableTouchEvent(),\n        activeOpacity: activeOpacity,\n        onPress: !this.shouldDisableTouchEvent() ? this.onPress : undefined,\n        onLongPress: !this.shouldDisableTouchEvent() ? this.onLongPress : undefined,\n        accessible: true,\n        accessibilityRole: this.isDisabled() ? undefined : 'button',\n        accessibilityLabel: this.props.accessibilityLabel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      }, this.isMultiPeriod() ? this.renderText() : this.renderContent());\n    }\n  }, {\n    key: \"renderPeriodsContainer\",\n    value: function renderPeriodsContainer() {\n      return React.createElement(View, {\n        style: this.style.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 7\n        }\n      }, this.renderContainer(), this.renderMarking());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.isMultiPeriod() ? this.renderPeriodsContainer() : this.renderContainer();\n    }\n  }, {\n    key: \"marking\",\n    get: function get() {\n      var marking = this.props.marking || {};\n\n      if (marking && marking.constructor === Array && marking.length) {\n        marking = {\n          marking: true\n        };\n      }\n\n      return marking;\n    }\n  }]);\n\n  return BasicDay;\n}(Component);\n\nBasicDay.displayName = 'IGNORE';\nBasicDay.propTypes = {\n  state: PropTypes.oneOf(['disabled', 'today', '']),\n  marking: PropTypes.any,\n  markingType: PropTypes.oneOf(_.values(Marking.markingTypes)),\n  theme: PropTypes.object,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  date: PropTypes.object,\n  disableAllTouchEventsForDisabledDays: PropTypes.bool\n};\nexport { BasicDay as default };","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/calendar/day/basic/index.js"],"names":["_","PropTypes","React","Component","Fragment","shouldUpdate","styleConstructor","Marking","BasicDay","props","onPress","invoke","date","onLongPress","style","theme","nextProps","disableAllTouchEventsForDisabledDays","disableTouchEvent","marking","disableTouch","isDisabled","disabled","state","markingType","markingTypes","multiDot","multiPeriod","custom","customStyles","selected","selectedColor","base","push","backgroundColor","isToday","today","isCustom","container","borderRadius","undefined","selectedTextColor","text","selectedText","color","disabledText","todayText","marked","dotColor","dots","periods","isMultiDot","getTextStyle","String","children","renderText","renderMarking","activeOpacity","testID","getContainerStyle","shouldDisableTouchEvent","accessibilityLabel","isMultiPeriod","renderContent","renderContainer","renderPeriodsContainer","constructor","Array","length","displayName","propTypes","oneOf","any","values","object","func","bool"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport React, {Component, Fragment} from 'react';\nimport {TouchableOpacity, Text, View} from 'react-native';\nimport {shouldUpdate} from '../../../component-updater';\nimport styleConstructor from './style';\nimport Marking from '../marking';\n\n\nexport default class BasicDay extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    state: PropTypes.oneOf(['disabled', 'today', '']), //TODO: deprecate\n    /** The marking object */\n    marking: PropTypes.any,\n    /** Date marking style [simple/period/multi-dot/multi-period]. Default = 'simple' */\n    markingType: PropTypes.oneOf(_.values(Marking.markingTypes)),\n    /** Theme object */\n    theme: PropTypes.object,\n    /** onPress callback */\n    onPress: PropTypes.func,\n    /** onLongPress callback */\n    onLongPress: PropTypes.func,\n    /** The date to return from press callbacks */\n    date: PropTypes.object,\n    /** Disable all touch events for disabled days. can be override with disableTouchEvent in markedDates*/\n    disableAllTouchEventsForDisabledDays: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    \n    this.style = styleConstructor(props.theme);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['children', 'state', 'markingType', 'marking', 'onPress', 'onLongPress', 'date']);\n  }\n\n  onPress = () => {\n    _.invoke(this.props, 'onPress', this.props.date);\n  }\n  \n  onLongPress = () => {\n    _.invoke(this.props, 'onLongPress', this.props.date);\n  }\n\n  get marking() {\n    let marking = this.props.marking || {};\n    if (marking && marking.constructor === Array && marking.length) {\n      marking = {\n        marking: true\n      };\n    }\n    return marking;\n  }\n\n  shouldDisableTouchEvent() {\n    const {disableAllTouchEventsForDisabledDays} = this.props;\n    const {disableTouchEvent} = this.marking;\n    let disableTouch = false;\n\n    if (typeof disableTouchEvent === 'boolean') {\n      disableTouch = disableTouchEvent;\n    } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && this.isDisabled()) {\n      disableTouch = disableAllTouchEventsForDisabledDays;\n    }\n    return disableTouch;\n  }\n\n  isDisabled() {\n    return typeof this.marking.disabled !== 'undefined' ? this.marking.disabled : this.props.state === 'disabled';\n  }\n\n  isToday() {\n    return this.props.state === 'today';\n  }\n\n  isMultiDot() {\n    return this.props.markingType === Marking.markingTypes.multiDot;\n  }\n\n  isMultiPeriod() {\n    return this.props.markingType === Marking.markingTypes.multiPeriod;\n  }\n\n  isCustom() {\n    return this.props.markingType === Marking.markingTypes.custom;\n  }\n\n  getContainerStyle() {\n    const {customStyles, selected, selectedColor} = this.props.marking;\n    const style = [this.style.base];\n\n    if (selected) {\n      style.push(this.style.selected);\n      if (selectedColor) {\n        style.push({backgroundColor: selectedColor});\n      }\n    } else if (this.isToday()) {\n      style.push(this.style.today);\n    }\n    \n    //Custom marking type\n    if (this.isCustom() && customStyles && customStyles.container) {\n      if (customStyles.container.borderRadius === undefined) {\n        customStyles.container.borderRadius = 16;\n      }\n      style.push(customStyles.container);\n    }\n\n    return style;\n  }\n\n  getTextStyle() {\n    const {customStyles, selected, selectedTextColor} = this.props.marking;\n    const style = [this.style.text];\n\n    if (selected) {\n      style.push(this.style.selectedText);\n      if (selectedTextColor) {\n        style.push({color: selectedTextColor});\n      }\n    } else if (this.isDisabled()) {\n      style.push(this.style.disabledText);\n    } else if (this.isToday()) {\n      style.push(this.style.todayText);\n    }\n\n    //Custom marking type\n    if (this.isCustom() && customStyles && customStyles.text) {\n      style.push(customStyles.text);\n    }\n\n    return style;\n  }\n\n  renderMarking() {\n    const {theme, markingType} = this.props;\n    const {selected, marked, dotColor, dots, periods} = this.marking;\n\n    return (\n      <Marking\n        type={markingType}\n        theme={theme}\n        marked={this.isMultiDot() ? true : marked}\n        selected={selected}\n        disabled={this.isDisabled()}\n        today={this.isToday()}\n        dotColor={dotColor}\n        dots={dots}\n        periods={periods}\n      />\n    );\n  }\n\n  renderText() {\n    return (\n      <Text allowFontScaling={false} style={this.getTextStyle()}>\n        {String(this.props.children)}\n      </Text>\n    );\n  }\n\n  renderContent() {\n    return (\n      <Fragment>\n        {this.renderText()}\n        {this.renderMarking()}\n      </Fragment>\n    );\n  }\n\n  renderContainer() {\n    const {activeOpacity} = this.marking;\n\n    return (\n      <TouchableOpacity\n        testID={this.props.testID}\n        style={this.getContainerStyle()}\n        disabled={this.shouldDisableTouchEvent()}\n        activeOpacity={activeOpacity}\n        onPress={!this.shouldDisableTouchEvent() ? this.onPress : undefined}\n        onLongPress={!this.shouldDisableTouchEvent() ? this.onLongPress : undefined}\n        accessible\n        accessibilityRole={this.isDisabled() ? undefined : 'button'}\n        accessibilityLabel={this.props.accessibilityLabel}\n      >\n        {this.isMultiPeriod() ? this.renderText() : this.renderContent()}\n      </TouchableOpacity>\n    );\n  }\n\n  renderPeriodsContainer() {\n    return (\n      <View style={this.style.container}>\n        {this.renderContainer()}\n        {this.renderMarking()}\n      </View>\n    );\n  }\n\n  render() {\n    return this.isMultiPeriod() ? this.renderPeriodsContainer() : this.renderContainer();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}