{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-community/async-storage';\nexport var Storage = {\n  setAsyncItem: function setAsyncItem(key, obj) {\n    return _regeneratorRuntime.async(function setAsyncItem$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, JSON.stringify(obj)));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  },\n  getAsyncItem: function getAsyncItem(key) {\n    var obj;\n    return _regeneratorRuntime.async(function getAsyncItem$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n          case 3:\n            obj = _context2.sent;\n            return _context2.abrupt(\"return\", obj !== null ? JSON.parse(obj) : null);\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  },\n  clearAsyncItem: function clearAsyncItem(key) {\n    return _regeneratorRuntime.async(function clearAsyncItem$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 8:\n            console.log('Done');\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n};","map":{"version":3,"sources":["D:/Work/App-Zip/source/constants/GPStorage.js"],"names":["AsyncStorage","Storage","setAsyncItem","key","obj","setItem","JSON","stringify","console","log","getAsyncItem","getItem","parse","clearAsyncItem","removeItem"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AAEA,OAAO,IAAMC,OAAO,GAAG;AACnBC,EAAAA,YAAY,EAAE,sBAAOC,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEAJ,YAAY,CAACK,OAAb,CAAqBF,GAArB,EAA0BG,IAAI,CAACC,SAAL,CAAeH,GAAf,CAA1B,CAFA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAINI,YAAAA,OAAO,CAACC,GAAR;;AAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADK;AAQnBC,EAAAA,YAAY,EAAE,sBAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEYH,YAAY,CAACW,OAAb,CAAqBR,GAArB,CAFZ;;AAAA;AAEAC,YAAAA,GAFA;AAAA,8CAGCA,GAAG,KAAK,IAAR,GAAeE,IAAI,CAACM,KAAL,CAAWR,GAAX,CAAf,GAAiC,IAHlC;;AAAA;AAAA;AAAA;AAKNI,YAAAA,OAAO,CAACC,GAAR;;AALM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GARK;AAgBnBI,EAAAA,cAAc,EAAE,wBAAOV,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEFH,YAAY,CAACc,UAAb,CAAwBX,GAAxB,CAFE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIRK,YAAAA,OAAO,CAACC,GAAR;;AAJQ;AAMZD,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBG,CAAhB","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\n\nexport const Storage = {\n    setAsyncItem: async (key, obj) => {\n        try {\n            await AsyncStorage.setItem(key, JSON.stringify(obj));\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    getAsyncItem: async (key) => {\n        try {\n            const obj = await AsyncStorage.getItem(key);\n            return obj !== null ? JSON.parse(obj) : null\n        } catch (e) {\n            console.log(e);\n        }\n    },\n    clearAsyncItem: async (key) => {\n        try {\n            await AsyncStorage.removeItem(key)\n        } catch (e) {\n            console.log(e);\n        }\n        console.log('Done')\n    }\n}"]},"metadata":{},"sourceType":"module"}