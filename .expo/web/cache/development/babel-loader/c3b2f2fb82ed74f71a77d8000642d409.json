{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\node_modules\\\\react-native-calendars\\\\src\\\\expandableCalendar\\\\agendaList.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport moment from 'moment';\nimport styleConstructor from \"./style\";\nimport asCalendarConsumer from \"./asCalendarConsumer\";\n\nvar commons = require(\"./commons\");\n\nvar UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\nvar AgendaList = function (_Component) {\n  _inherits(AgendaList, _Component);\n\n  var _super = _createSuper(AgendaList);\n\n  function AgendaList(props) {\n    var _this;\n\n    _classCallCheck(this, AgendaList);\n\n    _this = _super.call(this, props);\n\n    _this.onViewableItemsChanged = function (_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      if (viewableItems && !_this.sectionScroll) {\n        var topSection = _.get(viewableItems[0], 'section.title');\n\n        if (topSection && topSection !== _this._topSection) {\n          _this._topSection = topSection;\n\n          if (_this.didScroll) {\n            _.invoke(_this.props.context, 'setDate', _this._topSection, UPDATE_SOURCES.LIST_DRAG);\n          }\n        }\n      }\n    };\n\n    _this.onScroll = function (event) {\n      if (!_this.didScroll) {\n        _this.didScroll = true;\n      }\n\n      _.invoke(_this.props, 'onScroll', event);\n    };\n\n    _this.onMomentumScrollBegin = function (event) {\n      _.invoke(_this.props.context, 'setDisabled', true);\n\n      _.invoke(_this.props, 'onMomentumScrollBegin', event);\n    };\n\n    _this.onMomentumScrollEnd = function (event) {\n      _this.sectionScroll = false;\n\n      _.invoke(_this.props.context, 'setDisabled', false);\n\n      _.invoke(_this.props, 'onMomentumScrollEnd', event);\n    };\n\n    _this.onHeaderLayout = function (_ref2) {\n      var nativeEvent = _ref2.nativeEvent;\n      _this.sectionHeight = nativeEvent.layout.height;\n    };\n\n    _this.renderSectionHeader = function (_ref3) {\n      var title = _ref3.section.title;\n      var _this$props = _this.props,\n          renderSectionHeader = _this$props.renderSectionHeader,\n          dayFormatter = _this$props.dayFormatter,\n          dayFormat = _this$props.dayFormat,\n          useMoment = _this$props.useMoment,\n          markToday = _this$props.markToday,\n          sectionStyle = _this$props.sectionStyle;\n\n      if (renderSectionHeader) {\n        return renderSectionHeader(title);\n      }\n\n      var sectionTitle = title;\n\n      if (dayFormatter) {\n        sectionTitle = dayFormatter(title);\n      } else if (dayFormat) {\n        if (useMoment) {\n          sectionTitle = moment(title).format(dayFormat);\n        } else {\n          sectionTitle = XDate(title).toString(dayFormat);\n        }\n      }\n\n      if (markToday) {\n        var todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n        var today = XDate().toString(\"yyyy-MM-d\");\n        sectionTitle = title === today ? todayString + \", \" + sectionTitle : sectionTitle;\n      }\n\n      return React.createElement(Text, {\n        allowFontScaling: false,\n        style: [_this.style.sectionText, sectionStyle],\n        onLayout: _this.onHeaderLayout,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      }, sectionTitle);\n    };\n\n    _this.keyExtractor = function (item, index) {\n      var keyExtractor = _this.props.keyExtractor;\n      return _.isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n    };\n\n    _this.style = styleConstructor(props.theme);\n    _this._topSection = _.get(props, 'sections[0].title');\n    _this.didScroll = false;\n    _this.sectionScroll = false;\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    _this.list = React.createRef();\n    return _this;\n  }\n\n  _createClass(AgendaList, [{\n    key: \"getSectionIndex\",\n    value: function getSectionIndex(date) {\n      var i;\n\n      _.map(this.props.sections, function (section, index) {\n        if (section.title === date) {\n          i = index;\n          return;\n        }\n      });\n\n      return i;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var date = this.props.context.date;\n\n      if (date !== this._topSection) {\n        setTimeout(function () {\n          var sectionIndex = _this2.getSectionIndex(date);\n\n          _this2.scrollToSection(sectionIndex);\n        }, 500);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props$context = this.props.context,\n          updateSource = _this$props$context.updateSource,\n          date = _this$props$context.date;\n\n      if (date !== prevProps.context.date) {\n        if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n          var sectionIndex = this.getSectionIndex(date);\n          this.scrollToSection(sectionIndex);\n        }\n      }\n    }\n  }, {\n    key: \"scrollToSection\",\n    value: function scrollToSection(sectionIndex) {\n      if (this.list.current && sectionIndex !== undefined) {\n        this.sectionScroll = true;\n        this._topSection = this.props.sections[sectionIndex].title;\n        this.list.current.scrollToLocation({\n          animated: true,\n          sectionIndex: sectionIndex,\n          itemIndex: 0,\n          viewPosition: 0,\n          viewOffset: commons.isAndroid ? this.sectionHeight : 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(SectionList, _extends({}, this.props, {\n        ref: this.list,\n        keyExtractor: this.keyExtractor,\n        showsVerticalScrollIndicator: false,\n        onViewableItemsChanged: this.onViewableItemsChanged,\n        viewabilityConfig: this.viewabilityConfig,\n        renderSectionHeader: this.renderSectionHeader,\n        onScroll: this.onScroll,\n        onMomentumScrollBegin: this.onMomentumScrollBegin,\n        onMomentumScrollEnd: this.onMomentumScrollEnd,\n        onScrollToIndexFailed: function onScrollToIndexFailed(info) {\n          console.warn('onScrollToIndexFailed info: ', info);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return AgendaList;\n}(Component);\n\nAgendaList.displayName = 'AgendaList';\nAgendaList.propTypes = _objectSpread(_objectSpread({}, SectionList.propTypes), {}, {\n  dayFormat: PropTypes.string,\n  dayFormatter: PropTypes.func,\n  useMoment: PropTypes.bool,\n  markToday: PropTypes.bool,\n  sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n});\nAgendaList.defaultProps = {\n  dayFormat: 'dddd, MMM d',\n  stickySectionHeadersEnabled: true,\n  markToday: true\n};\nexport default asCalendarConsumer(AgendaList);","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/expandableCalendar/agendaList.js"],"names":["_","React","Component","PropTypes","XDate","moment","styleConstructor","asCalendarConsumer","commons","require","UPDATE_SOURCES","AgendaList","props","onViewableItemsChanged","viewableItems","sectionScroll","topSection","get","_topSection","didScroll","invoke","context","LIST_DRAG","onScroll","event","onMomentumScrollBegin","onMomentumScrollEnd","onHeaderLayout","nativeEvent","sectionHeight","layout","height","renderSectionHeader","title","section","dayFormatter","dayFormat","useMoment","markToday","sectionStyle","sectionTitle","format","toString","todayString","locales","defaultLocale","today","style","sectionText","keyExtractor","item","index","isFunction","String","theme","viewabilityConfig","itemVisiblePercentThreshold","list","createRef","date","i","map","sections","setTimeout","sectionIndex","getSectionIndex","scrollToSection","prevProps","updateSource","CALENDAR_INIT","current","undefined","scrollToLocation","animated","itemIndex","viewPosition","viewOffset","isAndroid","info","console","warn","displayName","propTypes","SectionList","string","func","bool","oneOfType","object","number","array","defaultProps","stickySectionHeadersEnabled"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport React, {Component} from 'react';\nimport {SectionList, Text} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport moment from 'moment';\nimport styleConstructor from './style';\nimport asCalendarConsumer from './asCalendarConsumer';\n\n\nconst commons = require('./commons');\nconst UPDATE_SOURCES = commons.UPDATE_SOURCES;\n\n/**\n * @description: AgendaList component\n * @note: Should be wrapped with 'CalendarProvider'\n * @extends: SectionList\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/expandableCalendar.js\n */\nclass AgendaList extends Component {\n  static displayName = 'AgendaList';\n\n  static propTypes = {\n    ...SectionList.propTypes,\n    /** day format in section title. Formatting values: http://arshaw.com/xdate/#Formatting */\n    dayFormat: PropTypes.string,\n    /** a function to custom format the section header's title */\n    dayFormatter: PropTypes.func,\n    /** whether to use moment.js for date string formatting \n     * (remember to pass 'dayFormat' with appropriate format, like 'dddd, MMM D') */\n    useMoment: PropTypes.bool,\n    /** whether to mark today's title with the \"Today, ...\" string. Default = true */\n    markToday: PropTypes.bool,\n    /** style passed to the section view */\n    sectionStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array])\n  }\n\n  static defaultProps = {\n    dayFormat: 'dddd, MMM d',\n    stickySectionHeadersEnabled: true,\n    markToday: true\n  }\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this._topSection = _.get(props, 'sections[0].title');\n    this.didScroll = false;\n    this.sectionScroll = false;\n\n    this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20 // 50 means if 50% of the item is visible\n    };\n    this.list = React.createRef();\n  }\n\n  getSectionIndex(date) {\n    let i;\n    _.map(this.props.sections, (section, index) => {\n      // NOTE: sections titles should match current date format!!!\n      if (section.title === date) {\n        i = index;\n        return;\n      }\n    });\n    return i;\n  }\n\n  componentDidMount() {\n    const {date} = this.props.context;\n    if (date !== this._topSection) {\n      setTimeout(() => {\n        const sectionIndex = this.getSectionIndex(date);\n        this.scrollToSection(sectionIndex);\n      }, 500);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const {updateSource, date} = this.props.context;\n    if (date !== prevProps.context.date) {\n      // NOTE: on first init data should set first section to the current date!!!\n      if (updateSource !== UPDATE_SOURCES.LIST_DRAG && updateSource !== UPDATE_SOURCES.CALENDAR_INIT) {\n        const sectionIndex = this.getSectionIndex(date);\n        this.scrollToSection(sectionIndex);\n      }\n    }\n  }\n\n  scrollToSection(sectionIndex) {\n    if (this.list.current && sectionIndex !== undefined) {\n      this.sectionScroll = true; // to avoid setDate() in onViewableItemsChanged\n      this._topSection = this.props.sections[sectionIndex].title;\n\n      this.list.current.scrollToLocation({\n        animated: true,\n        sectionIndex: sectionIndex,\n        itemIndex: 0,\n        viewPosition: 0, // position at the top\n        viewOffset: commons.isAndroid ? this.sectionHeight : 0\n      });\n    }\n  }\n\n  onViewableItemsChanged = ({viewableItems}) => {\n    if (viewableItems && !this.sectionScroll) {\n      const topSection = _.get(viewableItems[0], 'section.title');\n      if (topSection && topSection !== this._topSection) {\n        this._topSection = topSection;\n        if (this.didScroll) { // to avoid setDate() on first load (while setting the initial context.date value)\n          _.invoke(this.props.context, 'setDate', this._topSection, UPDATE_SOURCES.LIST_DRAG);\n        }\n      }\n    }\n  }\n\n  onScroll = (event) => {\n    if (!this.didScroll) {\n      this.didScroll = true;\n    }\n    _.invoke(this.props, 'onScroll', event);\n  }\n\n  onMomentumScrollBegin = (event) => {\n    _.invoke(this.props.context, 'setDisabled', true);\n    _.invoke(this.props, 'onMomentumScrollBegin', event);\n  }\n\n  onMomentumScrollEnd = (event) => {\n    // when list momentum ends AND when scrollToSection scroll ends\n    this.sectionScroll = false;\n    _.invoke(this.props.context, 'setDisabled', false);\n    _.invoke(this.props, 'onMomentumScrollEnd', event);\n  }\n\n  onHeaderLayout = ({nativeEvent}) => {\n    this.sectionHeight = nativeEvent.layout.height;\n  }\n\n  renderSectionHeader = ({section: {title}}) => {\n    const {renderSectionHeader, dayFormatter, dayFormat, useMoment, markToday, sectionStyle} = this.props;\n\n    if (renderSectionHeader) {\n      return renderSectionHeader(title);\n    }\n\n    let sectionTitle = title;\n\n    if (dayFormatter) {\n      sectionTitle = dayFormatter(title);\n    } else if (dayFormat) {\n      if (useMoment) {\n        sectionTitle = moment(title).format(dayFormat);\n      } else {\n        sectionTitle = XDate(title).toString(dayFormat);\n      }\n    }\n\n    if (markToday) {\n      const todayString = XDate.locales[XDate.defaultLocale].today || commons.todayString;\n      const today = XDate().toString(\"yyyy-MM-d\");\n      sectionTitle = title === today ? `${todayString}, ${sectionTitle}` : sectionTitle;\n    }\n\n    return (\n      <Text \n        allowFontScaling={false} \n        style={[this.style.sectionText, sectionStyle]} \n        onLayout={this.onHeaderLayout}\n      >\n        {sectionTitle}\n      </Text>\n    );\n  }\n\n  keyExtractor = (item, index) => {\n    const {keyExtractor} = this.props;\n    return _.isFunction(keyExtractor) ? keyExtractor(item, index) : String(index);\n  }\n\n  render() {\n    return (\n      <SectionList\n        {...this.props}\n        ref={this.list}\n        keyExtractor={this.keyExtractor}\n        showsVerticalScrollIndicator={false}\n        onViewableItemsChanged={this.onViewableItemsChanged}\n        viewabilityConfig={this.viewabilityConfig}\n        renderSectionHeader={this.renderSectionHeader}\n        onScroll={this.onScroll}\n        onMomentumScrollBegin={this.onMomentumScrollBegin}\n        onMomentumScrollEnd={this.onMomentumScrollEnd}\n        onScrollToIndexFailed={(info) => { console.warn('onScrollToIndexFailed info: ', info); }}\n        // getItemLayout={this.getItemLayout} // onViewableItemsChanged is not updated when list scrolls!!!\n      />\n    );\n  }\n\n  // getItemLayout = (data, index) => {\n  //   return {length: commons.screenWidth, offset: commons.screenWidth  * index, index};\n  // }\n}\n\nexport default asCalendarConsumer(AgendaList);\n"]},"metadata":{},"sourceType":"module"}