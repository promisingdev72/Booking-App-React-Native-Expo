{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\screens\\\\Tabbar\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport Drawer from \"react-native-drawer\";\nimport { EventRegister } from \"react-native-event-listeners\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { apiCallUpdateDeviceToken } from \"../../networkcall\";\nimport News from \"../News\";\nimport Appointment from \"../Appointment\";\nimport NewAppointment from \"../NewAppointment\";\nimport Products from \"../Products\";\nimport Profile from \"../Profile\";\nimport Menu from \"../Menu\";\nimport * as Notifications from \"expo-notifications\";\nvar Tab = createBottomTabNavigator();\n\nvar Tabbar = function (_Component) {\n  _inherits(Tabbar, _Component);\n\n  var _super = _createSuper(Tabbar);\n\n  function Tabbar(props) {\n    var _this;\n\n    _classCallCheck(this, Tabbar);\n\n    _this = _super.call(this, props);\n\n    _this.registerForPushNotificationsAsync = function _callee() {\n      var token, _await$Notifications$, existingStatus, finalStatus, _await$Notifications$2, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Notifications.getPermissionsAsync());\n\n            case 2:\n              _await$Notifications$ = _context.sent;\n              existingStatus = _await$Notifications$.status;\n              finalStatus = existingStatus;\n\n              if (!(existingStatus !== \"granted\")) {\n                _context.next = 11;\n                break;\n              }\n\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(Notifications.requestPermissionsAsync());\n\n            case 8:\n              _await$Notifications$2 = _context.sent;\n              status = _await$Notifications$2.status;\n              finalStatus = status;\n\n            case 11:\n              if (!(finalStatus !== \"granted\")) {\n                _context.next = 14;\n                break;\n              }\n\n              alert(\"Failed to get push token for push notification!\");\n              return _context.abrupt(\"return\");\n\n            case 14:\n              _context.next = 16;\n              return _regeneratorRuntime.awrap(Notifications.getExpoPushTokenAsync());\n\n            case 16:\n              token = _context.sent.data;\n              console.log(token);\n\n              if (Platform.OS === \"android\") {\n                Notifications.setNotificationChannelAsync(\"default\", {\n                  name: \"default\",\n                  importance: Notifications.AndroidImportance.MAX,\n                  vibrationPattern: [0, 250, 250, 250],\n                  lightColor: \"#FF231F7C\"\n                });\n              }\n\n              console.log(token);\n              return _context.abrupt(\"return\", token);\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._this = _assertThisInitialized(_this);\n    _this.state = {\n      expoPushToken: \"\"\n    };\n\n    _this.registerForPushNotificationsAsync().then(function (token) {\n      return _this.setState({\n        expoPushToken: token\n      }, function () {\n        apiCallUpdateDeviceToken(token).then(function (response) {\n          console.log(response.data);\n        });\n      });\n    });\n\n    _this.notificationListener = Notifications.addNotificationReceivedListener(function (notification) {\n      console.log(notification.request.content.title);\n      console.log(notification.request.content.body);\n    });\n    Notifications.setNotificationHandler({\n      handleNotification: function handleNotification() {\n        return _regeneratorRuntime.async(function handleNotification$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", {\n                  shouldShowAlert: true,\n                  shouldPlaySound: true,\n                  shouldSetBadge: true\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    });\n    _this.responseListener = Notifications.addNotificationResponseReceivedListener(function (response) {\n      console.log(response);\n    });\n    return _this;\n  }\n\n  _createClass(Tabbar, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.listener = EventRegister.addEventListener(\"open_drawer\", function () {\n        _this2.drawerOpen();\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      EventRegister.removeEventListener(this.listener);\n      Notifications.removeNotificationSubscription(this.notificationListener);\n      Notifications.removeNotificationSubscription(this.responseListener);\n    }\n  }, {\n    key: \"drawerOpen\",\n    value: function drawerOpen() {\n      EventRegister.emit(\"myCustomEvent\", \"it works!!!\");\n\n      this._drawer.open();\n\n      this._menu.fetchUserData();\n    }\n  }, {\n    key: \"drawerClose\",\n    value: function drawerClose() {\n      this._drawer.close();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Drawer, {\n        styles: {\n          drawer: {\n            shadowColor: \"#000000\",\n            shadowOpacity: 0.2,\n            shadowRadius: 1,\n            elevation: 4\n          }\n        },\n        ref: function ref(_ref2) {\n          return _this3._drawer = _ref2;\n        },\n        type: \"overlay\",\n        negotiatePan: true,\n        acceptTap: true,\n        openDrawerOffset: 0.2,\n        panOpenMask: 0.5,\n        tapToClose: true,\n        onOpen: function onOpen() {},\n        content: React.createElement(Menu, {\n          ref: function ref(_ref) {\n            return _this3._menu = _ref;\n          },\n          onClose: function onClose() {\n            _this3.drawerClose();\n          },\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1.0,\n          backgroundColor: \"#000\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, this.mainView()));\n    }\n  }, {\n    key: \"mainView\",\n    value: function mainView() {\n      return React.createElement(Tab.Navigator, {\n        initialRouteName: \"News\",\n        tabBarOptions: {\n          allowFontScaling: false,\n          showLabel: false,\n          style: {\n            backgroundColor: \"#000\"\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, this.renderNews(), this.renderAppointMent(), this.renderNewAppointment(), this.renderProducts(), this.renderProfile());\n    }\n  }, {\n    key: \"renderNews\",\n    value: function renderNews() {\n      var _this4 = this;\n\n      return React.createElement(Tab.Screen, {\n        name: \"Home\",\n        children: function children() {\n          return React.createElement(News, {\n            openDrawer: function openDrawer() {\n              _this4._this.drawerOpen();\n            },\n            navigation: _this4.props.navigation,\n            __self: _this4,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }\n          });\n        },\n        options: {\n          tabBarLabel: \"\",\n          tabBarIcon: function tabBarIcon(_ref3) {\n            var color = _ref3.color,\n                size = _ref3.size,\n                focused = _ref3.focused;\n            return renderImage(focused, IMAGE.home, \"Home\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderAppointMent\",\n    value: function renderAppointMent() {\n      var _this5 = this;\n\n      return React.createElement(Tab.Screen, {\n        name: \"Appointment\",\n        children: function children() {\n          return React.createElement(Appointment, {\n            openDrawer: function openDrawer() {\n              _this5._this.drawerOpen();\n            },\n            navigation: _this5.props.navigation,\n            __self: _this5,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 11\n            }\n          });\n        },\n        options: {\n          tabBarLabel: \"\",\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var color = _ref4.color,\n                size = _ref4.size,\n                focused = _ref4.focused;\n            return renderImage(focused, IMAGE.calender, \"Appointment\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderNewAppointment\",\n    value: function renderNewAppointment() {\n      var _this6 = this;\n\n      return React.createElement(Tab.Screen, {\n        name: \"NewAppointment\",\n        children: function children() {\n          return React.createElement(NewAppointment, {\n            openDrawer: function openDrawer() {\n              _this6._this.drawerOpen();\n            },\n            navigation: _this6.props.navigation,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 11\n            }\n          });\n        },\n        options: {\n          tabBarLabel: \"\",\n          tabBarIcon: function tabBarIcon(_ref5) {\n            var color = _ref5.color,\n                size = _ref5.size,\n                focused = _ref5.focused;\n            return renderImage(focused, IMAGE.new_appo, \"New Appointment\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderProducts\",\n    value: function renderProducts() {\n      var _this7 = this;\n\n      return React.createElement(Tab.Screen, {\n        name: \"Products\",\n        children: function children() {\n          return React.createElement(Products, {\n            openDrawer: function openDrawer() {\n              _this7._this.drawerOpen();\n            },\n            navigation: _this7.props.navigation,\n            __self: _this7,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 11\n            }\n          });\n        },\n        options: {\n          tabBarLabel: \"\",\n          tabBarIcon: function tabBarIcon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size,\n                focused = _ref6.focused;\n            return renderImage(focused, IMAGE.product, \"Products\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 7\n        }\n      });\n    }\n  }, {\n    key: \"renderProfile\",\n    value: function renderProfile() {\n      var _this8 = this;\n\n      return React.createElement(Tab.Screen, {\n        name: \"Profile\",\n        children: function children() {\n          return React.createElement(Profile, {\n            openDrawer: function openDrawer() {\n              _this8._this.drawerOpen();\n            },\n            navigation: _this8.props.navigation,\n            __self: _this8,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 11\n            }\n          });\n        },\n        options: {\n          tabBarLabel: \"\",\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var color = _ref7.color,\n                size = _ref7.size,\n                focused = _ref7.focused;\n            return renderImage(focused, IMAGE.profile, \"Profile\");\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Tabbar;\n}(Component);\n\nexport { Tabbar as default };\n\nfunction renderImage(focused, image, title) {\n  return React.createElement(View, {\n    style: {\n      flex: 1.0,\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, title == \"New Appointment\" ? React.createElement(View, {\n    style: styles.tabround,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.tabroundImage,\n    source: image,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  })) : React.createElement(View, {\n    style: {\n      marginTop: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: focused == false ? styles.image : styles.imageTint,\n    source: image,\n    resizeMode: \"contain\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["D:/Work/App-Zip/source/screens/Tabbar/index.js"],"names":["React","Component","styles","COLOR","IMAGE","Drawer","EventRegister","createBottomTabNavigator","apiCallUpdateDeviceToken","News","Appointment","NewAppointment","Products","Profile","Menu","Notifications","Tab","Tabbar","props","registerForPushNotificationsAsync","getPermissionsAsync","existingStatus","status","finalStatus","requestPermissionsAsync","alert","getExpoPushTokenAsync","token","data","console","log","Platform","OS","setNotificationChannelAsync","name","importance","AndroidImportance","MAX","vibrationPattern","lightColor","_this","state","expoPushToken","then","setState","response","notificationListener","addNotificationReceivedListener","notification","request","content","title","body","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","responseListener","addNotificationResponseReceivedListener","listener","addEventListener","drawerOpen","removeEventListener","removeNotificationSubscription","emit","_drawer","open","_menu","fetchUserData","close","drawer","shadowColor","shadowOpacity","shadowRadius","elevation","ref","drawerClose","navigation","flex","backgroundColor","mainView","allowFontScaling","showLabel","style","renderNews","renderAppointMent","renderNewAppointment","renderProducts","renderProfile","tabBarLabel","tabBarIcon","color","size","focused","renderImage","home","calender","new_appo","product","profile","image","justifyContent","tabround","tabroundImage","marginTop","imageTint"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { View, Image, Text, SafeAreaView, StatusBar } from \"react-native\";\nimport styles from \"./styles\";\n\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\n\nimport Drawer from \"react-native-drawer\";\nimport { EventRegister } from \"react-native-event-listeners\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { apiCallUpdateDeviceToken } from \"../../networkcall\";\n\nimport News from \"../News\";\nimport Appointment from \"../Appointment\";\nimport NewAppointment from \"../NewAppointment\";\nimport Products from \"../Products\";\nimport Profile from \"../Profile\";\nimport Menu from \"../Menu\";\n\nimport * as Notifications from \"expo-notifications\";\n\nconst Tab = createBottomTabNavigator();\n\nexport default class Tabbar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expoPushToken: \"\",\n    };\n\n    this.registerForPushNotificationsAsync().then((token) =>\n      this.setState({ expoPushToken: token }, () => {\n        apiCallUpdateDeviceToken(token).then((response) => {\n          console.log(response.data);\n        });\n      })\n    );\n\n    this.notificationListener = Notifications.addNotificationReceivedListener(\n      (notification) => {\n        // setNotification(notification);\n        console.log(notification.request.content.title);\n        console.log(notification.request.content.body);\n      }\n    );\n\n    Notifications.setNotificationHandler({\n      handleNotification: async () => {\n        return {\n          shouldShowAlert: true,\n          shouldPlaySound: true,\n          shouldSetBadge: true,\n        };\n      },\n    });\n\n    this.responseListener = Notifications.addNotificationResponseReceivedListener(\n      (response) => {\n        console.log(response);\n      }\n    );\n  }\n\n  componentDidMount() {\n    this.listener = EventRegister.addEventListener(\"open_drawer\", () => {\n      this.drawerOpen();\n    });\n  }\n\n  registerForPushNotificationsAsync = async () => {\n    let token;\n\n    const {\n      status: existingStatus,\n    } = await Notifications.getPermissionsAsync();\n    let finalStatus = existingStatus;\n    if (existingStatus !== \"granted\") {\n      const { status } = await Notifications.requestPermissionsAsync();\n      finalStatus = status;\n    }\n    if (finalStatus !== \"granted\") {\n      alert(\"Failed to get push token for push notification!\");\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n\n    if (Platform.OS === \"android\") {\n      Notifications.setNotificationChannelAsync(\"default\", {\n        name: \"default\",\n        importance: Notifications.AndroidImportance.MAX,\n        vibrationPattern: [0, 250, 250, 250],\n        lightColor: \"#FF231F7C\",\n      });\n    }\n\n    console.log(token);\n    return token;\n  };\n\n  componentWillUnmount() {\n    EventRegister.removeEventListener(this.listener);\n    Notifications.removeNotificationSubscription(this.notificationListener);\n    Notifications.removeNotificationSubscription(this.responseListener);\n  }\n\n  drawerOpen() {\n    EventRegister.emit(\"myCustomEvent\", \"it works!!!\");\n    this._drawer.open();\n    this._menu.fetchUserData();\n  }\n\n  drawerClose() {\n    this._drawer.close();\n  }\n\n  render() {\n    return (\n      <Drawer\n        styles={{\n          drawer: {\n            shadowColor: \"#000000\",\n            shadowOpacity: 0.2,\n            shadowRadius: 1,\n            elevation: 4,\n          },\n        }}\n        ref={(ref) => (this._drawer = ref)}\n        type=\"overlay\"\n        negotiatePan={true}\n        acceptTap={true}\n        openDrawerOffset={0.2}\n        panOpenMask={0.5}\n        tapToClose={true}\n        onOpen={() => {}}\n        content={\n          <Menu\n            ref={(ref) => (this._menu = ref)}\n            onClose={() => {\n              this.drawerClose();\n            }}\n            navigation={this.props.navigation}\n          />\n        }\n      >\n        <View style={{ flex: 1.0, backgroundColor: \"#000\" }}>\n          {this.mainView()}\n        </View>\n      </Drawer>\n    );\n  }\n\n  mainView() {\n    return (\n      <Tab.Navigator\n        initialRouteName={\"News\"}\n        tabBarOptions={{\n          allowFontScaling: false,\n          showLabel: false,\n          style: {\n            backgroundColor: \"#000\",\n            // height: 56\n          },\n        }}\n      >\n        {this.renderNews()}\n        {this.renderAppointMent()}\n        {this.renderNewAppointment()}\n        {this.renderProducts()}\n        {this.renderProfile()}\n      </Tab.Navigator>\n    );\n  }\n\n  _this = this;\n  renderNews() {\n    return (\n      <Tab.Screen\n        name=\"Home\"\n        children={() => (\n          <News\n            openDrawer={() => {\n              this._this.drawerOpen();\n            }}\n            navigation={this.props.navigation}\n          />\n        )}\n        options={{\n          tabBarLabel: \"\",\n          tabBarIcon: ({ color, size, focused }) => {\n            return renderImage(focused, IMAGE.home, \"Home\");\n          },\n        }}\n      />\n    );\n  }\n\n  renderAppointMent() {\n    return (\n      <Tab.Screen\n        name=\"Appointment\"\n        children={() => (\n          <Appointment\n            openDrawer={() => {\n              this._this.drawerOpen();\n            }}\n            navigation={this.props.navigation}\n          />\n        )}\n        options={{\n          tabBarLabel: \"\",\n          tabBarIcon: ({ color, size, focused }) => {\n            return renderImage(focused, IMAGE.calender, \"Appointment\");\n          },\n        }}\n      />\n    );\n  }\n\n  renderNewAppointment() {\n    return (\n      <Tab.Screen\n        name=\"NewAppointment\"\n        children={() => (\n          <NewAppointment\n            openDrawer={() => {\n              this._this.drawerOpen();\n            }}\n            navigation={this.props.navigation}\n          />\n        )}\n        options={{\n          tabBarLabel: \"\",\n          tabBarIcon: ({ color, size, focused }) => {\n            return renderImage(focused, IMAGE.new_appo, \"New Appointment\");\n          },\n        }}\n      />\n    );\n  }\n\n  renderProducts() {\n    return (\n      <Tab.Screen\n        name=\"Products\"\n        children={() => (\n          <Products\n            openDrawer={() => {\n              this._this.drawerOpen();\n            }}\n            navigation={this.props.navigation}\n          />\n        )}\n        options={{\n          tabBarLabel: \"\",\n          tabBarIcon: ({ color, size, focused }) => {\n            return renderImage(focused, IMAGE.product, \"Products\");\n          },\n        }}\n      />\n    );\n  }\n\n  renderProfile() {\n    return (\n      <Tab.Screen\n        name=\"Profile\"\n        children={() => (\n          <Profile\n            openDrawer={() => {\n              this._this.drawerOpen();\n            }}\n            navigation={this.props.navigation}\n          />\n        )}\n        options={{\n          tabBarLabel: \"\",\n          tabBarIcon: ({ color, size, focused }) => {\n            return renderImage(focused, IMAGE.profile, \"Profile\");\n          },\n        }}\n      />\n    );\n  }\n}\n\nfunction renderImage(focused, image, title) {\n  return (\n    <View style={{ flex: 1.0, justifyContent: \"center\" }}>\n      {title == \"New Appointment\" ? (\n        <View style={styles.tabround}>\n          <Image\n            style={styles.tabroundImage}\n            source={image}\n            resizeMode={\"contain\"}\n          />\n        </View>\n      ) : (\n        <View style={{ marginTop: 4 }}>\n          <Image\n            style={focused == false ? styles.image : styles.imageTint}\n            source={image}\n            resizeMode={\"contain\"}\n          />\n        </View>\n      )}\n    </View>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}