{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\screens\\\\Register\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { CommonActions } from '@react-navigation/native';\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport { FONT } from \"../../fonts\";\nimport { Storage } from \"../../constants/GPStorage\";\nimport { apiCallSignUp } from \"../../networkcall\";\nimport SnackView from \"../../component/SnackView\";\nimport SmallLoader from \"../../component/SmallLoader\";\nimport { ScrollView } from 'react-native-gesture-handler';\n\nvar Register = function (_Component) {\n  _inherits(Register, _Component);\n\n  var _super = _createSuper(Register);\n\n  function Register() {\n    var _this;\n\n    _classCallCheck(this, Register);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      username: '',\n      email: '',\n      number: '',\n      password: '',\n      confirm_password: '',\n      loading: false,\n      is_accept_policy: false\n    };\n\n    _this.onPressBack = function () {\n      _this.props.navigation.goBack();\n    };\n\n    _this.onPressPolicies = function () {\n      _this.props.navigation.navigate('Webview');\n    };\n\n    _this.onPressAccept = function () {\n      var is_accept_policy = _this.state.is_accept_policy;\n\n      _this.setState({\n        is_accept_policy: !is_accept_policy\n      });\n    };\n\n    _this.onPressSignup = function () {\n      var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!_this.state.username) {\n        _this.refSnackView.showSnack(\"Please enter user name\");\n\n        return;\n      }\n\n      if (!_this.state.email) {\n        _this.refSnackView.showSnack(\"Please enter email address\");\n\n        return;\n      } else if (!reg.test(_this.state.email)) {\n        _this.refSnackView.showSnack(\"Please enter valid email address\");\n\n        return;\n      }\n\n      if (!_this.state.number) {\n        _this.refSnackView.showSnack(\"Please enter phone number\");\n\n        return;\n      } else if (_this.state.number.length < 10) {\n        _this.refSnackView.showSnack('Please enter valid mobile number');\n\n        return;\n      }\n\n      if (!_this.state.password) {\n        _this.refSnackView.showSnack(\"Please enter password\");\n\n        return;\n      }\n\n      if (!_this.state.confirm_password) {\n        _this.refSnackView.showSnack(\"Please enter confirm password\");\n\n        return;\n      }\n\n      if (_this.state.password != _this.state.confirm_password) {\n        _this.refSnackView.showSnack('Password and Confirm password dose not match');\n\n        return;\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      apiCallSignUp(_this.state.username, _this.state.number, _this.state.email, _this.state.password).then(function (response) {\n        _this.setState({\n          loading: false\n        });\n\n        console.log(response.data);\n        var data = response.data;\n        var status = data.status;\n        var message = data.message;\n\n        if (status) {\n          var userData = data.data[0];\n          Storage.setAsyncItem('userData', {\n            'data': userData\n          });\n\n          _this.props.navigation.dispatch(function (state) {\n            return CommonActions.reset({\n              index: 0,\n              routes: [{\n                name: 'Tabbar'\n              }]\n            });\n          });\n        } else {\n          _this.refSnackView.showSnack(message);\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Register, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          number = _this$state.number,\n          password = _this$state.password,\n          confirm_password = _this$state.confirm_password,\n          is_accept_policy = _this$state.is_accept_policy;\n      return React.createElement(ImageBackground, {\n        style: styles.container,\n        source: IMAGE.splash,\n        resizeMode: \"cover\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: {\n          flex: 1.0\n        },\n        behavior: Platform.OS == \"ios\" ? \"padding\" : \"height\",\n        keyboardVerticalOffset: Platform.OS == \"ios\" ? 0 : 20,\n        enabled: Platform.OS === \"ios\" ? true : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }\n      }, React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), React.createElement(ScrollView, {\n        contentContainerStyle: {\n          flex: 1.0\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, this.renderStatusBar(), React.createElement(View, {\n        style: styles.navigationView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.backButton,\n        onPress: this.onPressBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }\n      }, React.createElement(Image, {\n        style: styles.backIcon,\n        source: IMAGE.back,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 17\n        }\n      }))), React.createElement(View, {\n        style: styles.loginItemContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.welcomeTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, \"Sign up\"), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Username\",\n        value: username,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            username: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Email\",\n        value: email,\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Mobile Number\",\n        value: number,\n        keyboardType: \"phone-pad\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            number: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Password\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.inputBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputField,\n        placeholder: \"Confirm Password\",\n        value: confirm_password,\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirm_password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: [styles.privacyContainer],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.privacyBox,\n        onPress: this.onPressAccept,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }\n      }, is_accept_policy == true && React.createElement(Image, {\n        style: styles.checkboxImage,\n        source: IMAGE.check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      })), React.createElement(Text, {\n        style: styles.singupMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, \"accept our \"), React.createElement(TouchableOpacity, {\n        onPress: this.onPressPolicies,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.privayTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 19\n        }\n      }, \"Privacy Policies\"))), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.onPressSignup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, \"Sign Up\"))))), React.createElement(TouchableOpacity, {\n        style: styles.singupContainer,\n        onPress: this.onPressBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.singupMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      }, \"Already have an account? \"), React.createElement(Text, {\n        style: styles.singupTxt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }\n      }, \"Log in\")), React.createElement(SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 9\n        }\n      }), React.createElement(SnackView, {\n        ref: function ref(refSnackView) {\n          return _this2.refSnackView = refSnackView;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }\n      }), React.createElement(SmallLoader, {\n        loading: this.state.loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderStatusBar\",\n    value: function renderStatusBar() {\n      return React.createElement(StatusBar, {\n        barStyle: \"light-content\",\n        backgroundColor: COLOR.gold,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Register;\n}(Component);\n\nexport { Register as default };","map":{"version":3,"sources":["D:/Work/App-Zip/source/screens/Register/index.js"],"names":["React","Component","CommonActions","styles","COLOR","IMAGE","FONT","Storage","apiCallSignUp","SnackView","SmallLoader","ScrollView","Register","state","username","email","number","password","confirm_password","loading","is_accept_policy","onPressBack","props","navigation","goBack","onPressPolicies","navigate","onPressAccept","setState","onPressSignup","reg","refSnackView","showSnack","test","length","then","response","console","log","data","status","message","userData","setAsyncItem","dispatch","reset","index","routes","name","catch","error","container","splash","flex","Platform","OS","renderStatusBar","navigationView","backButton","backIcon","back","loginItemContainer","welcomeTxt","inputBox","inputField","text","privacyContainer","privacyBox","checkboxImage","check","singupMessage","privayTxt","button","buttonTxt","singupContainer","singupTxt","gold"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ImageBackground, TouchableOpacity, Platform, Text, View, SafeAreaView, KeyboardAvoidingView, TextInput, Image, StatusBar } from 'react-native';\n\nimport { CommonActions } from '@react-navigation/native';\n\nimport styles from './styles'\nimport { COLOR } from '../../colors'\nimport { IMAGE } from '../../images'\nimport { FONT } from '../../fonts'\nimport { Storage } from '../../constants/GPStorage'\nimport { apiCallSignUp } from '../../networkcall'\nimport SnackView from '../../component/SnackView'\nimport SmallLoader from '../../component/SmallLoader'\nimport { ScrollView } from 'react-native-gesture-handler';\n\n\nexport default class Register extends Component {\n\n  state = {\n    username: '',\n    email: '',\n    number: '',\n    password: '',\n    confirm_password: '',\n    loading: false,\n    is_accept_policy: false\n  }\n\n  onPressBack = () => {\n    this.props.navigation.goBack()\n  }\n\n  onPressPolicies = () => {\n    this.props.navigation.navigate('Webview')\n  }\n\n  onPressAccept = () => {\n    const { is_accept_policy } = this.state\n    this.setState({\n      is_accept_policy: !is_accept_policy\n    })\n  }\n\n  onPressSignup = () => {\n\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n    if (!this.state.username) {\n      this.refSnackView.showSnack(\"Please enter user name\");\n      return\n    }\n\n    if (!this.state.email) {\n      this.refSnackView.showSnack(\"Please enter email address\");\n      return\n    } else if (!reg.test(this.state.email)) {\n      this.refSnackView.showSnack(\"Please enter valid email address\");\n      return\n    }\n\n    if (!this.state.number) {\n      this.refSnackView.showSnack(\"Please enter phone number\");\n      return\n    }\n    else if (this.state.number.length < 10) {\n      this.refSnackView.showSnack('Please enter valid mobile number')\n      return\n    }\n\n    if (!this.state.password) {\n      this.refSnackView.showSnack(\"Please enter password\");\n      return\n    }\n\n    if (!this.state.confirm_password) {\n      this.refSnackView.showSnack(\"Please enter confirm password\");\n      return\n    }\n\n    if (this.state.password != this.state.confirm_password) {\n      this.refSnackView.showSnack('Password and Confirm password dose not match')\n      return\n    }\n\n\n    this.setState({ loading: true });\n    apiCallSignUp(\n      this.state.username,\n      this.state.number,\n      this.state.email,\n      this.state.password)\n      .then((response) => {\n        this.setState({ loading: false })\n\n        console.log(response.data);\n        let data = response.data;\n        let status = data.status;\n        let message = data.message;\n\n        if (status) {\n          let userData = data.data[0];\n          Storage.setAsyncItem('userData', { 'data': userData })  //Store session\n          this.props.navigation.dispatch(state => {          //Navigate Tabbar screen\n            return CommonActions.reset({\n              index: 0,\n              routes: [{ name: 'Tabbar' }]\n            })\n          })\n        } else {\n          this.refSnackView.showSnack(message)\n        }\n      })\n      .catch(error => {\n        console.log(error);\n        this.setState({ loading: false })\n      })\n\n  }\n\n  render() {\n    const { username, email, number, password, confirm_password, is_accept_policy } = this.state\n    return (\n\n      <ImageBackground style={styles.container}\n        source={IMAGE.splash}\n        resizeMode='cover'>\n        <KeyboardAvoidingView\n          style={{ flex: 1.0 }}\n          behavior={Platform.OS == \"ios\" ? \"padding\" : \"height\"}\n          keyboardVerticalOffset={Platform.OS == \"ios\" ? 0 : 20}\n          enabled={Platform.OS === \"ios\" ? true : false}>\n          <SafeAreaView />\n          <ScrollView contentContainerStyle={{ flex: 1.0 }}>\n            {this.renderStatusBar()}\n            <View style={styles.navigationView}>\n              <TouchableOpacity style={styles.backButton}\n                onPress={this.onPressBack}>\n                <Image style={styles.backIcon}\n                  source={IMAGE.back} />\n              </TouchableOpacity>\n            </View>\n            <View style={styles.loginItemContainer}>\n              <Text style={styles.welcomeTxt}>{`Sign up`}</Text>\n              <View style={styles.inputBox}>\n                <TextInput\n                  style={styles.inputField}\n                  placeholder='Username'\n                  value={username}\n                  onChangeText={(text) => this.setState({ username: text })} />\n              </View>\n              <View style={styles.inputBox}>\n                <TextInput\n                  style={styles.inputField}\n                  placeholder='Email'\n                  value={email}\n                  keyboardType='email-address'\n                  onChangeText={(text) => this.setState({ email: text })} />\n              </View>\n              <View style={styles.inputBox}>\n                <TextInput\n                  style={styles.inputField}\n                  placeholder='Mobile Number'\n                  value={number}\n                  keyboardType='phone-pad'\n                  onChangeText={(text) => this.setState({ number: text })} />\n              </View>\n              <View style={styles.inputBox}>\n                <TextInput\n                  style={styles.inputField}\n                  placeholder='Password'\n                  value={password}\n                  secureTextEntry={true}\n                  onChangeText={(text) => this.setState({ password: text })} />\n              </View>\n              <View style={styles.inputBox}>\n                <TextInput\n                  style={styles.inputField}\n                  placeholder='Confirm Password'\n                  value={confirm_password}\n                  secureTextEntry={true}\n                  onChangeText={(text) => this.setState({ confirm_password: text })} />\n              </View>\n              <View style={[styles.privacyContainer]}>\n                <TouchableOpacity style={styles.privacyBox}\n                  onPress={this.onPressAccept}>\n                  {is_accept_policy == true &&\n                    <Image\n                      style={styles.checkboxImage}\n                      source={IMAGE.check} />\n                  }\n                </TouchableOpacity>\n                <Text style={styles.singupMessage}>{`accept our `}</Text>\n                <TouchableOpacity\n                  onPress={this.onPressPolicies}>\n                  <Text style={styles.privayTxt}>{`Privacy Policies`}</Text>\n                </TouchableOpacity>\n              </View>\n              <TouchableOpacity style={styles.button}\n                onPress={this.onPressSignup}>\n                <Text style={styles.buttonTxt}>Sign Up</Text>\n              </TouchableOpacity>\n            </View>\n          </ScrollView>\n        </KeyboardAvoidingView>\n        <TouchableOpacity style={styles.singupContainer}\n          onPress={this.onPressBack}>\n          <Text style={styles.singupMessage}>{`Already have an account? `}</Text>\n          <Text style={styles.singupTxt}>{`Log in`}</Text>\n        </TouchableOpacity>\n        <SafeAreaView />\n        <SnackView ref={(refSnackView) => this.refSnackView = refSnackView} />\n        <SmallLoader loading={this.state.loading} />\n      </ImageBackground>\n\n    )\n  }\n\n  renderStatusBar() {\n    return (\n      <StatusBar\n        barStyle='light-content'\n        backgroundColor={COLOR.gold} />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}