{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\node_modules\\\\react-native-calendars\\\\src\\\\calendar\\\\day\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, { Component } from 'react';\nimport { shouldUpdate, extractComponentProps } from \"../../component-updater\";\nimport { xdateToData } from \"../../interface\";\nimport { SELECT_DATE_SLOT } from \"../../testIDs\";\nimport BasicDay from \"./basic\";\nimport PeriodDay from \"./period\";\n\nvar basicDayProps = _.omit(BasicDay.propTypes, 'date');\n\nvar Day = function (_Component) {\n  _inherits(Day, _Component);\n\n  var _super = _createSuper(Day);\n\n  function Day() {\n    var _this;\n\n    _classCallCheck(this, Day);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getAccessibilityLabel = function (day) {\n      var state = _this.props.state;\n      var today = XDate.locales[XDate.defaultLocale].today;\n      var isToday = state === 'today';\n      var formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n\n      var markingLabel = _this.getMarkingLabel(day);\n\n      if (formatAccessibilityLabel) {\n        return (isToday ? today : '') + \" \" + day.toString(formatAccessibilityLabel) + \" \" + markingLabel;\n      }\n\n      return (isToday ? 'today' : '') + \" \" + day.toString('dddd d MMMM yyyy') + \" \" + markingLabel;\n    };\n\n    return _this;\n  }\n\n  _createClass(Day, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return shouldUpdate(this.props, nextProps, ['day', 'dayComponent', 'markingType', 'marking', 'onPress', 'onLongPress']);\n    }\n  }, {\n    key: \"getMarkingLabel\",\n    value: function getMarkingLabel() {\n      var marking = this.props.marking;\n      var label = '';\n\n      if (marking.accessibilityLabel) {\n        return marking.accessibilityLabel;\n      }\n\n      if (marking.selected) {\n        label += 'selected ';\n\n        if (!marking.marked) {\n          label += 'You have no entries for this day ';\n        }\n      }\n\n      if (marking.marked) {\n        label += 'You have entries for this day ';\n      }\n\n      if (marking.startingDay) {\n        label += 'period start ';\n      }\n\n      if (marking.endingDay) {\n        label += 'period end ';\n      }\n\n      if (marking.disabled || marking.disableTouchEvent) {\n        label += 'disabled ';\n      }\n\n      return label;\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      var _this$props = this.props,\n          dayComponent = _this$props.dayComponent,\n          markingType = _this$props.markingType;\n\n      if (dayComponent) {\n        return dayComponent;\n      }\n\n      return markingType === 'period' ? PeriodDay : BasicDay;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var day = this.props.day;\n      var date = xdateToData(day);\n      var Component = this.getDayComponent();\n      var dayProps = extractComponentProps(Component, this.props);\n      return React.createElement(Component, _extends({}, dayProps, {\n        date: date,\n        testID: SELECT_DATE_SLOT + \"-\" + date.dateString,\n        accessibilityLabel: this.getAccessibilityLabel(day),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }), date ? day.getDate() : day);\n    }\n  }]);\n\n  return Day;\n}(Component);\n\nDay.displayName = 'IGNORE';\nDay.propTypes = _objectSpread(_objectSpread({}, basicDayProps), {}, {\n  day: PropTypes.object,\n  dayComponent: PropTypes.any\n});\nexport { Day as default };","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/calendar/day/index.js"],"names":["_","PropTypes","XDate","React","Component","shouldUpdate","extractComponentProps","xdateToData","SELECT_DATE_SLOT","BasicDay","PeriodDay","basicDayProps","omit","propTypes","Day","getAccessibilityLabel","day","state","props","today","locales","defaultLocale","isToday","formatAccessibilityLabel","markingLabel","getMarkingLabel","toString","nextProps","marking","label","accessibilityLabel","selected","marked","startingDay","endingDay","disabled","disableTouchEvent","dayComponent","markingType","date","getDayComponent","dayProps","dateString","getDate","displayName","object","any"],"mappings":"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","sourcesContent":["import _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\nimport React, {Component} from 'react';\nimport {shouldUpdate, extractComponentProps} from '../../component-updater';\nimport {xdateToData} from '../../interface';\nimport {SELECT_DATE_SLOT} from '../../testIDs';\nimport BasicDay from './basic';\nimport PeriodDay from './period';\n\n\nconst basicDayProps = _.omit(BasicDay.propTypes, 'date');\n\nexport default class Day extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    ...basicDayProps,\n    /** The day to render */\n    day: PropTypes.object,\n    /** Provide custom day rendering component */\n    dayComponent: PropTypes.any\n  };\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['day', 'dayComponent', 'markingType', 'marking', 'onPress', 'onLongPress']);\n  }\n\n  getMarkingLabel() {\n    const {marking} = this.props;\n    let label = '';\n\n    if (marking.accessibilityLabel) {\n      return marking.accessibilityLabel;\n    }\n\n    if (marking.selected) {\n      label += 'selected ';\n      if (!marking.marked) {\n        label += 'You have no entries for this day ';\n      }\n    }\n    if (marking.marked) {\n      label += 'You have entries for this day ';\n    }\n    if (marking.startingDay) {\n      label += 'period start ';\n    }\n    if (marking.endingDay) {\n      label += 'period end ';\n    }\n    if (marking.disabled || marking.disableTouchEvent) {\n      label += 'disabled ';\n    }\n    return label;\n  }\n\n  getAccessibilityLabel = (day) => {\n    const {state} = this.props;\n    const today = XDate.locales[XDate.defaultLocale].today;\n    const isToday = state === 'today'; //TODO: check if 'day' equals 'today' and remove 'state' check\n    const formatAccessibilityLabel = XDate.locales[XDate.defaultLocale].formatAccessibilityLabel;\n    const markingLabel = this.getMarkingLabel(day);\n\n    if (formatAccessibilityLabel) {\n      return `${isToday ? today : ''} ${day.toString(formatAccessibilityLabel)} ${markingLabel}`;\n    }\n\n    return `${isToday ? 'today' : ''} ${day.toString('dddd d MMMM yyyy')} ${markingLabel}`;\n  };\n\n  getDayComponent() {\n    const {dayComponent, markingType} = this.props;\n\n    if (dayComponent) {\n      return dayComponent;\n    }\n    return markingType === 'period' ? PeriodDay : BasicDay;\n  }\n\n  render() {\n    const {day} = this.props;\n    const date = xdateToData(day);\n    const Component = this.getDayComponent();\n    const dayProps = extractComponentProps(Component, this.props);\n\n    return (\n      <Component\n          {...dayProps}\n          date={date}\n          testID={`${SELECT_DATE_SLOT}-${date.dateString}`}\n          accessibilityLabel={this.getAccessibilityLabel(day)}\n        >\n          {date ? day.getDate() : day}\n      </Component>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}