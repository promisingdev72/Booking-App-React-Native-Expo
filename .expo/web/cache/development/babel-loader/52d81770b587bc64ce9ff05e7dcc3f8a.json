{"ast":null,"code":"var XDate = require('xdate');\n\nfunction sameMonth(a, b) {\n  return a instanceof XDate && b instanceof XDate && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth();\n}\n\nfunction sameDate(a, b) {\n  return a instanceof XDate && b instanceof XDate && a.getFullYear() === b.getFullYear() && a.getMonth() === b.getMonth() && a.getDate() === b.getDate();\n}\n\nfunction isGTE(a, b) {\n  return b.diffDays(a) > -1;\n}\n\nfunction isLTE(a, b) {\n  return a.diffDays(b) > -1;\n}\n\nfunction fromTo(a, b) {\n  var days = [];\n  var from = +a,\n      to = +b;\n\n  for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n    days.push(new XDate(from, true));\n  }\n\n  return days;\n}\n\nfunction month(xd) {\n  var year = xd.getFullYear(),\n      month = xd.getMonth();\n  var days = new Date(year, month + 1, 0).getDate();\n  var firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n  var lastDay = new XDate(year, month, days, 0, 0, 0, true);\n  return fromTo(firstDay, lastDay);\n}\n\nfunction weekDayNames() {\n  var firstDayOfWeek = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var weekDaysNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n  var dayShift = firstDayOfWeek % 7;\n\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n\n  return weekDaysNames;\n}\n\nfunction page(xd, firstDayOfWeek, showSixWeeks) {\n  var days = month(xd);\n  var before = [],\n      after = [];\n  var fdow = (7 + firstDayOfWeek) % 7 || 7;\n  var ldow = (fdow + 6) % 7;\n  firstDayOfWeek = firstDayOfWeek || 0;\n  var from = days[0].clone();\n  var daysBefore = from.getDay();\n\n  if (from.getDay() !== fdow) {\n    from.addDays(-(from.getDay() + 7 - fdow) % 7);\n  }\n\n  var to = days[days.length - 1].clone();\n  var day = to.getDay();\n\n  if (day !== ldow) {\n    to.addDays((ldow + 7 - day) % 7);\n  }\n\n  var daysForSixWeeks = (daysBefore + days.length) / 6 >= 6;\n\n  if (showSixWeeks && !daysForSixWeeks) {\n    to.addDays(7);\n  }\n\n  if (isLTE(from, days[0])) {\n    before = fromTo(from, days[0]);\n  }\n\n  if (isGTE(to, days[days.length - 1])) {\n    after = fromTo(days[days.length - 1], to);\n  }\n\n  return before.concat(days.slice(1, days.length - 1), after);\n}\n\nfunction isDateNotInTheRange(minDate, maxDate, date) {\n  return minDate && !isGTE(date, minDate) || maxDate && !isLTE(date, maxDate);\n}\n\nmodule.exports = {\n  weekDayNames: weekDayNames,\n  sameMonth: sameMonth,\n  sameDate: sameDate,\n  month: month,\n  page: page,\n  fromTo: fromTo,\n  isLTE: isLTE,\n  isGTE: isGTE,\n  isDateNotInTheRange: isDateNotInTheRange\n};","map":{"version":3,"sources":["D:/Work/App-Zip/node_modules/react-native-calendars/src/dateutils.js"],"names":["XDate","require","sameMonth","a","b","getFullYear","getMonth","sameDate","getDate","isGTE","diffDays","isLTE","fromTo","days","from","to","addDays","getTime","push","month","xd","year","Date","firstDay","lastDay","weekDayNames","firstDayOfWeek","weekDaysNames","locales","defaultLocale","dayNamesShort","dayShift","slice","concat","page","showSixWeeks","before","after","fdow","ldow","clone","daysBefore","getDay","length","day","daysForSixWeeks","isDateNotInTheRange","minDate","maxDate","date","module","exports"],"mappings":"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","sourcesContent":["const XDate = require('xdate');\n\nfunction sameMonth(a, b) {\n  return a instanceof XDate && b instanceof XDate &&\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth();\n}\n\nfunction sameDate(a, b) {\n  return a instanceof XDate && b instanceof XDate &&\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate();\n}\n\nfunction isGTE(a, b) {\n  return b.diffDays(a) > -1;\n}\n\nfunction isLTE(a, b) {\n  return a.diffDays(b) > -1;\n}\n\nfunction fromTo(a, b) {\n  const days = [];\n  let from = +a, to = +b;\n  for (; from <= to; from = new XDate(from, true).addDays(1).getTime()) {\n    days.push(new XDate(from, true));\n  }\n  return days;\n}\n\nfunction month(xd) {\n  const year = xd.getFullYear(), month = xd.getMonth();\n  const days = new Date(year, month + 1, 0).getDate();\n\n  const firstDay = new XDate(year, month, 1, 0, 0, 0, true);\n  const lastDay = new XDate(year, month, days, 0, 0, 0, true);\n\n  return fromTo(firstDay, lastDay);\n}\n\nfunction weekDayNames(firstDayOfWeek = 0) {\n  let weekDaysNames = XDate.locales[XDate.defaultLocale].dayNamesShort;\n  const dayShift = firstDayOfWeek % 7;\n  if (dayShift) {\n    weekDaysNames = weekDaysNames.slice(dayShift).concat(weekDaysNames.slice(0, dayShift));\n  }\n  return weekDaysNames;\n}\n\nfunction page(xd, firstDayOfWeek, showSixWeeks) {\n  const days = month(xd);\n  let before = [], after = [];\n\n  const fdow = ((7 + firstDayOfWeek) % 7) || 7;\n  const ldow = (fdow + 6) % 7;\n\n  firstDayOfWeek = firstDayOfWeek || 0;\n\n  const from = days[0].clone();\n  const daysBefore = from.getDay();\n\n  if (from.getDay() !== fdow) {\n    from.addDays(-(from.getDay() + 7 - fdow) % 7);\n  }\n\n  const to = days[days.length - 1].clone();\n  const day = to.getDay();\n  if (day !== ldow) {\n    to.addDays((ldow + 7 - day) % 7);\n  }\n\n  const daysForSixWeeks = (((daysBefore + days.length) / 6) >= 6);\n\n  if (showSixWeeks && !daysForSixWeeks) {\n    to.addDays(7);\n  }\n\n  if (isLTE(from, days[0])) {\n    before = fromTo(from, days[0]);\n  }\n\n  if (isGTE(to, days[days.length - 1])) {\n    after = fromTo(days[days.length - 1], to);\n  }\n\n  return before.concat(days.slice(1, days.length - 1), after);\n}\n\nfunction isDateNotInTheRange(minDate, maxDate, date) {\n  return (minDate && !isGTE(date, minDate)) || (maxDate && !isLTE(date, maxDate));\n}\n\n\nmodule.exports = {\n  weekDayNames,\n  sameMonth,\n  sameDate,\n  month,\n  page,\n  fromTo,\n  isLTE,\n  isGTE,\n  isDateNotInTheRange\n};\n"]},"metadata":{},"sourceType":"script"}