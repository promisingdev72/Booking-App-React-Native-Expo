{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Work\\\\App-Zip\\\\source\\\\component\\\\AppointmentCell\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport styles from \"./styles\";\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\nimport moment from \"moment\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nvar AppointmentCell = function (_Component) {\n  _inherits(AppointmentCell, _Component);\n\n  var _super = _createSuper(AppointmentCell);\n\n  function AppointmentCell() {\n    _classCallCheck(this, AppointmentCell);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AppointmentCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          index = _this$props.index,\n          item = _this$props.item;\n      var date = moment(item.booking_date + \" \" + item.time, \"YYYY-MM-DD HH:mm:ss\");\n      var dateStr = date.format(\"MMMM DD\");\n      var time = date.format(\"ddd hh:mm a\");\n      return React.createElement(TouchableOpacity, {\n        activeOpacity: 0.9,\n        style: [styles.containerView, {\n          backgroundColor: index % 2 == 0 ? \"rgba(251,234,182,1.0)\" : \"#fff\"\n        }],\n        onPress: function onPress() {\n          _this.props.onPress(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.dateContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.dateTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }\n      }, dateStr), React.createElement(Text, {\n        style: styles.dayText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }\n      }, time)), React.createElement(View, {\n        style: styles.profileContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.profileShadowView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, this.renderImage(), React.createElement(View, {\n        style: styles.profileDescView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.profileTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }\n      }, item.barbar_name), React.createElement(Text, {\n        style: styles.profileDesc,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, item.service_name)))));\n    }\n  }, {\n    key: \"renderImage\",\n    value: function renderImage() {\n      return React.createElement(Image, {\n        style: styles.profileImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return AppointmentCell;\n}(Component);\n\nexport { AppointmentCell as default };","map":{"version":3,"sources":["D:/Work/App-Zip/source/component/AppointmentCell/index.js"],"names":["React","Component","styles","COLOR","IMAGE","moment","TouchableOpacity","AppointmentCell","props","index","item","date","booking_date","time","dateStr","format","containerView","backgroundColor","onPress","dateContainer","dateTitle","dayText","profileContainer","profileShadowView","renderImage","profileDescView","profileTitle","barbar_name","profileDesc","service_name","profileImage"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,MAAP;AAEA,SAASC,KAAT;AACA,SAASC,KAAT;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;IAEqBC,e;;;;;;;;;;;;;6BACV;AAAA;;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,IADR,eACQA,IADR;AAEP,UAAIC,IAAI,GAAGN,MAAM,CACfK,IAAI,CAACE,YAAL,GAAoB,GAApB,GAA0BF,IAAI,CAACG,IADhB,EAEf,qBAFe,CAAjB;AAIA,UAAIC,OAAO,GAAGH,IAAI,CAACI,MAAL,CAAY,SAAZ,CAAd;AACA,UAAIF,IAAI,GAAGF,IAAI,CAACI,MAAL,CAAY,aAAZ,CAAX;AACA,aACE,oBAAC,gBAAD;AACE,QAAA,aAAa,EAAE,GADjB;AAEE,QAAA,KAAK,EAAE,CACLb,MAAM,CAACc,aADF,EAEL;AACEC,UAAAA,eAAe,EAAER,KAAK,GAAG,CAAR,IAAa,CAAb,GAAiB,uBAAjB,GAA2C;AAD9D,SAFK,CAFT;AAQE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,KAAI,CAACD,KAAL,CAAWU,OAAX,CAAmBR,IAAnB;AACD,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACiB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjB,MAAM,CAACkB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgCN,OAAhC,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEZ,MAAM,CAACmB,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BR,IAA9B,CAFF,CAZF,EAgBE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACoB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEpB,MAAM,CAACqB,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,WAAL,EADH,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEtB,MAAM,CAACuB,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEvB,MAAM,CAACwB,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmChB,IAAI,CAACiB,WAAxC,CADF,EAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEzB,MAAM,CAAC0B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkClB,IAAI,CAACmB,YAAvC,CAFF,CAFF,CADF,CAhBF,CADF;AA4BD;;;kCAEa;AACZ,aAAO,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE3B,MAAM,CAAC4B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAzC0C7B,S;;SAAxBM,e","sourcesContent":["import React, { Component } from \"react\";\nimport { Text, View, SafeAreaView, FlatList, Image } from \"react-native\";\nimport styles from \"./styles\";\n\nimport { COLOR } from \"../../colors\";\nimport { IMAGE } from \"../../images\";\n\nimport moment from \"moment\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nexport default class AppointmentCell extends Component {\n  render() {\n    const { index, item } = this.props;\n    let date = moment(\n      item.booking_date + \" \" + item.time,\n      \"YYYY-MM-DD HH:mm:ss\"\n    );\n    let dateStr = date.format(\"MMMM DD\");\n    let time = date.format(\"ddd hh:mm a\");\n    return (\n      <TouchableOpacity\n        activeOpacity={0.9}\n        style={[\n          styles.containerView,\n          {\n            backgroundColor: index % 2 == 0 ? \"rgba(251,234,182,1.0)\" : \"#fff\",\n          },\n        ]}\n        onPress={() => {\n          this.props.onPress(item);\n        }}\n      >\n        <View style={styles.dateContainer}>\n          <Text style={styles.dateTitle}>{dateStr}</Text>\n          <Text style={styles.dayText}>{time}</Text>\n        </View>\n        <View style={styles.profileContainer}>\n          <View style={styles.profileShadowView}>\n            {this.renderImage()}\n            <View style={styles.profileDescView}>\n              <Text style={styles.profileTitle}>{item.barbar_name}</Text>\n              <Text style={styles.profileDesc}>{item.service_name}</Text>\n            </View>\n          </View>\n        </View>\n      </TouchableOpacity>\n    );\n  }\n\n  renderImage() {\n    return <Image style={styles.profileImage} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}